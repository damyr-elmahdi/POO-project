from tkinter import*
import customtkinter
from PIL import ImageTk, Image
from tkinter import messagebox
import csv
import os
from tkinter import Tk, Label
import tkinter as tk
import customtkinter as ctk
from datetime import datetime, timedelta
import csv
import textwrap

class page_books():
    def Books(self):
        win1 = Tk()
        win1.title('Page1')

# ******************************************* Book 1 *************************************************        
        def book_1():
            win1.destroy()
            def card():
                def visa_ferify():
                    number = num_bk1.get().strip()
                    date = date_bk1.get().strip()
                    code = cod_bk1.get().strip()
                    adress = adress_bk1.get().strip()
                
                    if not number.isdigit():
                        messagebox.showerror("Error", "Please!!! write your correct number.") 
                    elif not date:
                        messagebox.showerror("Error", "Please!!! write your information.")
                    elif not code.isdigit():
                        messagebox.showerror("Error", "Please enter a valid code") 
                    elif not adress:
                        messagebox.showerror("Error", "Please!!! write your information.")                        
                    elif number and date and code and adress:
                        win_book1.destroy()
                        def Thank():
                            win = Tk()
                            def accuiel_page():
                                # win.destroy()
                                class InvoiceWindow:
                                    def __init__(self, master, days_remaining):
                                        self.master = master
                                        self.days_remaining = days_remaining  # Initialize the number of days remaining
                                        self.create_invoice_window()

                                    def create_invoice_window(self):
                                        invoice_window = Toplevel(self.master)
                                        invoice_window.title("Invoice")
                                        invoice_window.geometry("500x400+445+320")
                                        invoice_window.resizable(False, False)  # Disable resizing


                                        canvas = Canvas(invoice_window, width=500, height=400, bg="white")
                                        canvas.pack()

                                        canvas.create_text(250, 30, text="Invoice", font=("Helvetica", 24, "bold"), fill="blue", anchor="center")
                                        canvas.create_line(50, 60, 450, 60, fill="blue")

                                        start_date = datetime.now()
                                        end_date = start_date + timedelta(days=15)
                                        with open('facture.csv', 'r', newline='') as file:
                                            reader = csv.reader(file)
                                            # Assuming the data in each row is ordered as Nam, Prén, Email, city, title, price
                                            for row in reader:
                                                Nam, Prén, Email, city, title, price = row
                                            
                                        details = [
                                            ("Username :", Nam),
                                            ("Lastname :", Prén),
                                            ("Book Title:", title),
                                            ("City :", city),
                                            ("Email :", Email),
                                            ("Price:", price),
                                            ("Start_Date:", start_date.strftime("%Y-%m-%d")),
                                            ("End_Date :", end_date.strftime("%Y-%m-%d")),
                                            # Add more details as needed
                                            # ("Remaining Days:", self.days_remaining)  # Display remaining days
                                        ]

                                        y_offset = 100
                                        for label, value in details:
                                            canvas.create_text(190, y_offset, text=label, anchor="e", font=("Helvetica", 12, "bold"), fill="blue")
                                            canvas.create_text(240, y_offset, text=value, anchor="w", font=("Helvetica", 12), fill="black")
                                            y_offset += 30

                                        canvas.create_text(150, 365, text=f"Total Day: {self.days_remaining} day", font=("Helvetica", 12, "bold")) 
                                            
                                        close_button = Button(invoice_window, text="Close", font=("Helvetica", 12), bg="red", fg="white", command=invoice_window.destroy)
                                        close_button.place(x=420, y=350)

                                    def update_days_remaining(self):
                                        self.days_remaining -= 1

                                class LibraryApp:
                                    def __init__(self, master):
                                        self.master = master
                                        self.days_remaining = self.calculate_remaining_days()  # Initialize the number of days remaining
                                        self.master.title("Library App")
                                        self.master.resizable(False, False)  # Disable resizing
                                        self.master.state("zoomed")
                                        self.create_main_window()

                                    def create_main_window(self):
                                        # Customize window background color
                                        self.master.configure(bg="lightgray")

                                        # Navigation Bar
                                        
                                        nav_frame = tk.Frame(self.master, bg="darkblue", height=60)
                                        nav_frame.pack(side="top", fill="x")

                                        title_label = Label(nav_frame, text="Library App", font=("Helvetica", 20), fg="white", bg="darkblue")
                                        title_label.pack(side="left", padx=20, pady=10)

                                        # Adjust button position
                                        img2=ImageTk.PhotoImage(Image.open("images/bg.jpg"))
                                        l1=customtkinter.CTkLabel(self.master,image=img2)
                                        l1.pack()
                                        book_button = Button(l1, text="Open Invoice", font=("Helvetica", 14), bg="blue", fg="white", command=self.open_book)
                                        book_button.place(relx=0.5, rely=0.3, anchor="center")

                                    def open_book(self):
                                        if self.days_remaining > 0:  # Check if there are remaining days
                                            self.days_remaining -= 1  # Decrement remaining days when opening an invoice
                                            InvoiceWindow(self.master, self.days_remaining)
                                        else:
                                            messagebox.showinfo("Information", "No more days left!")

                                    def calculate_remaining_days(self):
                                        current_date = datetime.now()
                                        start_date = current_date  # Set start date as current date
                                        remaining_days = (current_date - start_date).days
                                        return max(15 - remaining_days, 0)  # Ensure remaining days never go below 0

                                def main():
                                    win = tk.Tk()
                                    app = LibraryApp(win)
                                    win.mainloop()

                                if __name__ == "__main__":
                                    main()
                                

                            img2=ImageTk.PhotoImage(Image.open("images/BOOK.png"))
                            l1=customtkinter.CTkLabel(win,image=img2)
                            l1.pack()
                            thank = customtkinter.CTkLabel(win, text="Thank you for using our service!", text_color="white", bg_color="#171715", font=('Times New Roman',50,'bold'))
                            thank.pack()
                            thank.place(x=350,y=80)
                            but = customtkinter.CTkButton(win, text="continue", font=('Times New Roman',25,'bold'), text_color="white",height=40, bg_color="#232220", command=accuiel_page)

                            but.pack()
                            but.place(x=620, y=170)

                        
                            win.state("zoome")   
                            win.mainloop()
                            
                        Thank()
                        
                    
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter your card : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=30)
                
                num_bk1= customtkinter.CTkEntry(frame3_bk1, width=210, height=35, placeholder_text='Enter card number')
                num_bk1.place(x=255, y=25)
                
                date_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='mm/yy')
                date_bk1.place(x=515, y=25)
                
                cod_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter security card')
                cod_bk1.place(x=255, y=75)
                
                adress_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter your adress')
                adress_bk1.place(x=515, y=75)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=visa_ferify)
                buy_bk1.place(x= 355, y=140)
            
            def paypal():
                def payp():
                    email = email_pay_bk1.get().strip()
                    if not email:
                        messagebox.showerror("Error", "Please!!! write your information.") 
                    elif '@gmail.com' not in email:
                        messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                    else:
                        win_book1.destroy()
                        def Thank():
                            win = Tk()
                            def accuiel_page():
                                win.destroy()
                                class InvoiceWindow:
                                    def __init__(self, master, days_remaining):
                                        self.master = master
                                        self.days_remaining = days_remaining  # Initialize the number of days remaining
                                        self.create_invoice_window()

                                    def create_invoice_window(self):
                                        invoice_window = Toplevel(self.master)
                                        invoice_window.title("Invoice")
                                        invoice_window.geometry("500x400+445+320")
                                        invoice_window.resizable(False, False)  # Disable resizing


                                        canvas = Canvas(invoice_window, width=500, height=400, bg="white")
                                        canvas.pack()

                                        canvas.create_text(250, 30, text="Invoice", font=("Helvetica", 24, "bold"), fill="blue", anchor="center")
                                        canvas.create_line(50, 60, 450, 60, fill="blue")

                                        start_date = datetime.now()
                                        end_date = start_date + timedelta(days=15)
                    
                                        with open('facture.csv', 'r', newline='') as file:
                                            reader = csv.reader(file)
                                            # Assuming the data in each row is ordered as Nam, Prén, Email, city, title, price
                                            for row in reader:
                                                Nam, Prén, Email, city, title, price = row
                                            
                                        details = [
                                            ("Username :", Nam),
                                            ("Lastname :", Prén),
                                            ("Book Title:", title),
                                            ("City :", city),
                                            ("Email :", Email),
                                            ("Price:", price),
                                            ("Start_Date:", start_date.strftime("%Y-%m-%d")),
                                            ("End_Date :", end_date.strftime("%Y-%m-%d")),
                                            # Add more details as needed
                                            # ("Remaining Days:", self.days_remaining)  # Display remaining days
                                        ]

                                        y_offset = 100
                                        for label, value in details:
                                            canvas.create_text(190, y_offset, text=label, anchor="e", font=("Helvetica", 12, "bold"), fill="blue")
                                            canvas.create_text(240, y_offset, text=value, anchor="w", font=("Helvetica", 12), fill="black")
                                            y_offset += 30

                                        total_day = canvas.create_text(150, 365, text=f"Total Day: {self.days_remaining} day", font=("Helvetica", 12, "bold")) 
                                            
                                        close_button = Button(invoice_window, text="Close", font=("Helvetica", 12), bg="red", fg="white", command=invoice_window.destroy)
                                        close_button.place(x=420, y=350)

                                    def update_days_remaining(self):
                                        self.days_remaining -= 1

                                class LibraryApp:
                                    def __init__(self, master):
                                        self.master = master
                                        self.days_remaining = self.calculate_remaining_days()  # Initialize the number of days remaining
                                        self.master.title("Library App")
                                        self.master.resizable(False, False)  # Disable resizing
                                        self.master.state("zoomed")
                                        self.create_main_window()

                                    def create_main_window(self):
                                        # Customize window background color
                                        self.master.configure(bg="lightgray")

                                        # Navigation Bar
                                        
                                        nav_frame = tk.Frame(self.master, bg="darkblue", height=60)
                                        nav_frame.pack(side="top", fill="x")

                                        title_label = Label(nav_frame, text="Library App", font=("Helvetica", 20), fg="white", bg="darkblue")
                                        title_label.pack(side="left", padx=20, pady=10)

                                        # Adjust button position
                                        img2=ImageTk.PhotoImage(Image.open("images/bg.jpg"))
                                        l1=customtkinter.CTkLabel(self.master,image=img2)
                                        l1.pack()
                                        book_button = Button(l1, text="Open Invoice", font=("Helvetica", 14), bg="blue", fg="white", command=self.open_book)
                                        book_button.place(relx=0.5, rely=0.3, anchor="center")

                                    def open_book(self):
                                        if self.days_remaining > 2:  # Check if there are remaining days
                                            self.days_remaining -= 1  # Decrement remaining days when opening an invoice
                                            InvoiceWindow(self.master, self.days_remaining)
                                        else:
                                            messagebox.showinfo("Information", "Stay one more day")

                                    def calculate_remaining_days(self):
                                        current_date = datetime.now()
                                        start_date = current_date  # Set start date as current date
                                        remaining_days = (current_date - start_date).days
                                        return max(15 - remaining_days, 0)  # Ensure remaining days never go below 0

                                def main():
                                    win = tk.Tk()
                                    app = LibraryApp(win)
                                    win.mainloop()

                                if __name__ == "__main__":
                                    main()
                               
                            img2=ImageTk.PhotoImage(Image.open("images/BOOK.png"))
                            l1=customtkinter.CTkLabel(win,image=img2)
                            l1.pack()
                            thank = customtkinter.CTkLabel(win, text="Thank you for using our service!", text_color="white", bg_color="#171715", font=('Times New Roman',50,'bold'))
                            thank.pack()
                            thank.place(x=350,y=80)
                            but = customtkinter.CTkButton(win, text="continue", font=('Times New Roman',25,'bold'), text_color="white",height=40, bg_color="#232220", command=accuiel_page)

                            but.pack()
                            but.place(x=620, y=170)

                        
                            win.state("zoome")   
                            win.mainloop()
                            
                        Thank()
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter email from paypal : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=45)
                
                email_pay_bk1= customtkinter.CTkEntry(frame3_bk1, width=290, height=35, placeholder_text='Enter your email')
                email_pay_bk1.place(x=320, y=45)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=175, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=payp)
                buy_bk1.place(x= 315, y=115)
            
            def Cntinue():
                name = name_bk1.get().strip()
                prénom = prenom_bk1.get().strip()     
                phone = phone_bk1.get().strip()
                city = city_bk1.get().strip()
                email = email_bk1.get().strip()
                title = entry.get().strip()
                price = entry_price.get().strip()
                
                if not name:
                    messagebox.showerror("Error", "Please!!! write your information.") 
                elif not prénom:
                    messagebox.showerror("Error", "Please!!! write your information.")
                
                elif not phone.isdigit():
                    messagebox.showerror("Error", "Please enter a valid number") 
                elif not city:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif not email:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif not price:
                    messagebox.showerror("Error", "Please!!! write your information.") 
                elif not title:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif '@' not in email:
                    messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                
                else:
                    with open("facture.csv", "a", newline='') as file:
                        writer = csv.writer(file)
                        writer.writerow([name, prénom, email, city, title, price])
                        
                    head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Choose your payment : ",font=('Times New Roman',20,'bold'))
                    head_bk1.place(x=85, y=350)
                    
                    img_visa = ImageTk.PhotoImage(Image.open("images/visa.jfif"))
                    but_visa = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_visa,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_visa.place(x=380, y=370)
                    
                    img_masterCard = ImageTk.PhotoImage(Image.open("images/mastercard.jfif"))
                    but_masterCard = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_masterCard,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_masterCard.place(x=510, y=370)
                    
                    img_paypal = ImageTk.PhotoImage(Image.open("images/paypal.jfif"))
                    but_paypal = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_paypal,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=paypal)
                    but_paypal.place(x=640, y=370)

                
            win_book1 = Tk()

            img2=ImageTk.PhotoImage(Image.open("images/pattern.png"))
            l1=customtkinter.CTkLabel(win_book1,image=img2)
            l1.pack()
        
            frame=customtkinter.CTkFrame(master = win_book1, width=500, height=640, corner_radius=6)
            frame.place(x = 70,y=40)

            img_book1 = ImageTk.PhotoImage(Image.open("new_images/img-2.jfif"))
            def insert_newlines(text, width=70):
                # Wrap text to fit the specified width
                return '\n'.join(textwrap.wrap(text, width))

            booksdesc = {}

            # Open the CSV file and read the descriptions
            with open('desc.csv', mode='r', newline='', encoding='utf-8') as file:
                reader = csv.reader(file, delimiter=';')
                next(reader)  # Skip the header
                for row in reader:
                    book, description = row
                    # Wrap the description text to fit the frame width
                    booksdesc[book] = insert_newlines(description, width=70)
                    
            label1 = Label(frame,image = img_book1, width=310, height=290)
            label1.pack()
            label1.place(x=60, y=25)
            
            desc_bk1=customtkinter.CTkLabel(frame, text="Description : ",font=('Times New Roman',25,'bold'))
            desc_bk1.place(x=25, y=335)
            
            desc_bk1 = ctk.CTkLabel(frame, text=booksdesc.get('book1', 'No description available'), font=('Times New Roman', 15, 'bold'))
            desc_bk1.place(x=25, y=375)
            
            frame2_bk1=customtkinter.CTkFrame(master = win_book1, width=790, height=440, corner_radius=6)
            frame2_bk1.place(x = 630,y=40)

            head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Enter your information",font=('Times New Roman',35,'bold'))
            head_bk1.place(x=230, y=15)
            name_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your username ')
            name_bk1.place(x=95, y=95)
            prenom_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your lastname')
            prenom_bk1.place(x=420, y=95)
            phone_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your phone')
            phone_bk1.place(x=95, y=155)
            city_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your city')
            city_bk1.place(x=420,y=155) 
            default_text = "Treasure Island"
            entry = customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your title')
            entry.insert(0, default_text)  # Insert default text at index 0
            entry.place(x=420, y=220)
            email_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your email')
            email_bk1.place(x=95, y=220)
            # price_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your price')
            # price_bk1.place(x=95, y=290)
            default_price = "10$"
            entry_price = customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your price')
            entry_price.insert(0, default_price)  # Insert default text at index 0
            entry_price.place(x=95, y=290)
            but_bk1 = customtkinter.CTkButton(frame2_bk1, width=270, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=Cntinue)
            but_bk1.place(x=420, y=290)
                    
            win_book1.state("zoomed")
            win_book1.mainloop()
            
            
# ********************************************************* Book 2 ********************************************************           
        def book_2():
            win1.destroy()
            def card():
                def visa_ferify():
                    number = num_bk1.get().strip()
                    date = date_bk1.get().strip()
                    code = cod_bk1.get().strip()
                    adress = adress_bk1.get().strip()
                
                    if not number.isdigit():
                        messagebox.showerror("Error", "Please!!! write your correct number.") 
                    elif not date:
                        messagebox.showerror("Error", "Please!!! write your information.")
                    elif not code.isdigit():
                        messagebox.showerror("Error", "Please enter a valid code") 
                    elif not adress:
                        messagebox.showerror("Error", "Please!!! write your information.")                        
                    elif number and date and code and adress:
                        win_book1.destroy()
                        def Thank():
                            win = Tk()
                            def accuiel_page():
                                win.destroy()
                                class InvoiceWindow:
                                    def __init__(self, master, days_remaining):
                                        self.master = master
                                        self.days_remaining = days_remaining  # Initialize the number of days remaining
                                        self.create_invoice_window()

                                    def create_invoice_window(self):
                                        invoice_window = Toplevel(self.master)
                                        invoice_window.title("Invoice")
                                        invoice_window.geometry("500x400+445+320")
                                        invoice_window.resizable(False, False)  # Disable resizing


                                        canvas = Canvas(invoice_window, width=500, height=400, bg="white")
                                        canvas.pack()

                                        canvas.create_text(250, 30, text="Invoice", font=("Helvetica", 24, "bold"), fill="blue", anchor="center")
                                        canvas.create_line(50, 60, 450, 60, fill="blue")

                                        start_date = datetime.now()
                                        end_date = start_date + timedelta(days=15)
                                        with open('facture.csv', 'r', newline='') as file:
                                            reader = csv.reader(file)
                                            # Assuming the data in each row is ordered as Nam, Prén, Email, city, title, price
                                            for row in reader:
                                                Nam, Prén, Email, city, title, price = row
                                            
                                        details = [
                                            ("Username :", Nam),
                                            ("Lastname :", Prén),
                                            ("Book Title:", title),
                                            ("City :", city),
                                            ("Email :", Email),
                                            ("Price:", price),
                                            ("Start_Date:", start_date.strftime("%Y-%m-%d")),
                                            ("End_Date :", end_date.strftime("%Y-%m-%d")),
                                            # Add more details as needed
                                            # ("Remaining Days:", self.days_remaining)  # Display remaining days
                                        ]

                                        y_offset = 100
                                        for label, value in details:
                                            canvas.create_text(190, y_offset, text=label, anchor="e", font=("Helvetica", 12, "bold"), fill="blue")
                                            canvas.create_text(240, y_offset, text=value, anchor="w", font=("Helvetica", 12), fill="black")
                                            y_offset += 30

                                        total_day = canvas.create_text(150, 365, text=f"Total Day: {self.days_remaining} day", font=("Helvetica", 12, "bold")) 
                                            
                                        close_button = Button(invoice_window, text="Close", font=("Helvetica", 12), bg="red", fg="white", command=invoice_window.destroy)
                                        close_button.place(x=420, y=350)

                                    def update_days_remaining(self):
                                        self.days_remaining -= 1

                                class LibraryApp:
                                    def __init__(self, master):
                                        self.master = master
                                        self.days_remaining = self.calculate_remaining_days()  # Initialize the number of days remaining
                                        self.master.title("Library App")
                                        self.master.resizable(False, False)  # Disable resizing
                                        self.master.state("zoomed")
                                        self.create_main_window()

                                    def create_main_window(self):
                                        # Customize window background color
                                        self.master.configure(bg="lightgray")

                                        # Navigation Bar
                                        
                                        nav_frame = tk.Frame(self.master, bg="darkblue", height=60)
                                        nav_frame.pack(side="top", fill="x")

                                        title_label = Label(nav_frame, text="Library App", font=("Helvetica", 20), fg="white", bg="darkblue")
                                        title_label.pack(side="left", padx=20, pady=10)

                                        # Adjust button position
                                        img2=ImageTk.PhotoImage(Image.open("images/bg.jpg"))
                                        l1=customtkinter.CTkLabel(self.master,image=img2)
                                        l1.pack()
                                        book_button = Button(l1, text="Open Invoice", font=("Helvetica", 14), bg="blue", fg="white", command=self.open_book)
                                        book_button.place(relx=0.5, rely=0.3, anchor="center")

                                    def open_book(self):
                                        if self.days_remaining > 0:  # Check if there are remaining days
                                            self.days_remaining -= 1  # Decrement remaining days when opening an invoice
                                            InvoiceWindow(self.master, self.days_remaining)
                                        else:
                                            messagebox.showinfo("Information", "No more days left!")

                                    def calculate_remaining_days(self):
                                        current_date = datetime.now()
                                        start_date = current_date  # Set start date as current date
                                        remaining_days = (current_date - start_date).days
                                        return max(15 - remaining_days, 0)  # Ensure remaining days never go below 0

                                def main():
                                    win = tk.Tk()
                                    app = LibraryApp(win)
                                    win.mainloop()

                                if __name__ == "__main__":
                                    main()
                                

                            img2=ImageTk.PhotoImage(Image.open("images/BOOK.png"))
                            l1=customtkinter.CTkLabel(win,image=img2)
                            l1.pack()
                            thank = customtkinter.CTkLabel(win, text="Thank you for using our service!", text_color="white", bg_color="#171715", font=('Times New Roman',50,'bold'))
                            thank.pack()
                            thank.place(x=350,y=80)
                            but = customtkinter.CTkButton(win, text="continue", font=('Times New Roman',25,'bold'), text_color="white",height=40, bg_color="#232220", command=accuiel_page)

                            but.pack()
                            but.place(x=620, y=170)

                        
                            win.state("zoome")   
                            win.mainloop()
                            
                        Thank()
                        
                        
                        
                        
                        
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter your card : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=30)
                
                num_bk1= customtkinter.CTkEntry(frame3_bk1, width=210, height=35, placeholder_text='Enter card number')
                num_bk1.place(x=255, y=25)
                
                date_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='mm/yy')
                date_bk1.place(x=515, y=25)
                
                cod_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter security card')
                cod_bk1.place(x=255, y=75)
                
                adress_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter your adress')
                adress_bk1.place(x=515, y=75)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=visa_ferify)
                buy_bk1.place(x= 355, y=140)
            
            

            
            def paypal():
                def payp():
                    email = email_pay_bk1.get().strip()
                    if not email:
                        messagebox.showerror("Error", "Please!!! write your information.") 
                    elif '@' not in email:
                        messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                    else:
                        win_book1.destroy()
                        def Thank():
                            win = Tk()
                            def accuiel_page():
                                win.destroy()
                                class InvoiceWindow:
                                    def __init__(self, master, days_remaining):
                                        self.master = master
                                        self.days_remaining = days_remaining  # Initialize the number of days remaining
                                        self.create_invoice_window()

                                    def create_invoice_window(self):
                                        invoice_window = Toplevel(self.master)
                                        invoice_window.title("Invoice")
                                        invoice_window.geometry("500x400+445+320")
                                        invoice_window.resizable(False, False)  # Disable resizing


                                        canvas = Canvas(invoice_window, width=500, height=400, bg="white")
                                        canvas.pack()

                                        canvas.create_text(250, 30, text="Invoice", font=("Helvetica", 24, "bold"), fill="blue", anchor="center")
                                        canvas.create_line(50, 60, 450, 60, fill="blue")

                                        start_date = datetime.now()
                                        end_date = start_date + timedelta(days=15)
                                        with open('facture.csv', 'r', newline='') as file:
                                            reader = csv.reader(file)
                                            # Assuming the data in each row is ordered as Nam, Prén, Email, city, title, price
                                            for row in reader:
                                                Nam, Prén, Email, city, title, price = row
                                            
                                        details = [
                                            ("Username :", Nam),
                                            ("Lastname :", Prén),
                                            ("Book Title:", title),
                                            ("City :", city),
                                            ("Email :", Email),
                                            ("Price:", price),
                                            ("Start_Date:", start_date.strftime("%Y-%m-%d")),
                                            ("End_Date :", end_date.strftime("%Y-%m-%d")),
                                            # Add more details as needed
                                            # ("Remaining Days:", self.days_remaining)  # Display remaining days
                                        ]

                                        y_offset = 100
                                        for label, value in details:
                                            canvas.create_text(190, y_offset, text=label, anchor="e", font=("Helvetica", 12, "bold"), fill="blue")
                                            canvas.create_text(240, y_offset, text=value, anchor="w", font=("Helvetica", 12), fill="black")
                                            y_offset += 30

                                        total_day = canvas.create_text(150, 365, text=f"Total Day: {self.days_remaining} day", font=("Helvetica", 12, "bold")) 
                                            
                                        close_button = Button(invoice_window, text="Close", font=("Helvetica", 12), bg="red", fg="white", command=invoice_window.destroy)
                                        close_button.place(x=420, y=350)

                                    def update_days_remaining(self):
                                        self.days_remaining -= 1

                                class LibraryApp:
                                    def __init__(self, master):
                                        self.master = master
                                        self.days_remaining = self.calculate_remaining_days()  # Initialize the number of days remaining
                                        self.master.title("Library App")
                                        self.master.resizable(False, False)  # Disable resizing
                                        self.master.state("zoomed")
                                        self.create_main_window()

                                    def create_main_window(self):
                                        # Customize window background color
                                        self.master.configure(bg="lightgray")

                                        # Navigation Bar
                                        
                                        nav_frame = tk.Frame(self.master, bg="darkblue", height=60)
                                        nav_frame.pack(side="top", fill="x")

                                        title_label = Label(nav_frame, text="Library App", font=("Helvetica", 20), fg="white", bg="darkblue")
                                        title_label.pack(side="left", padx=20, pady=10)

                                        # Adjust button position
                                        img2=ImageTk.PhotoImage(Image.open("images/bg.jpg"))
                                        l1=customtkinter.CTkLabel(self.master,image=img2)
                                        l1.pack()
                                        book_button = Button(l1, text="Open Invoice", font=("Helvetica", 14), bg="blue", fg="white", command=self.open_book)
                                        book_button.place(relx=0.5, rely=0.3, anchor="center")

                                    def open_book(self):
                                        if self.days_remaining > 0:  # Check if there are remaining days
                                            self.days_remaining -= 1  # Decrement remaining days when opening an invoice
                                            InvoiceWindow(self.master, self.days_remaining)
                                        else:
                                            messagebox.showinfo("Information", "No more days left!")

                                    def calculate_remaining_days(self):
                                        current_date = datetime.now()
                                        start_date = current_date  # Set start date as current date
                                        remaining_days = (current_date - start_date).days
                                        return max(15 - remaining_days, 0)  # Ensure remaining days never go below 0

                                def main():
                                    win = tk.Tk()
                                    app = LibraryApp(win)
                                    win.mainloop()

                                if __name__ == "__main__":
                                    main()

                            img2=ImageTk.PhotoImage(Image.open("images/BOOK.png"))
                            l1=customtkinter.CTkLabel(win,image=img2)
                            l1.pack()
                            thank = customtkinter.CTkLabel(win, text="Thank you for using our service!", text_color="white", bg_color="#171715", font=('Times New Roman',50,'bold'))
                            thank.pack()
                            thank.place(x=350,y=80)
                            but = customtkinter.CTkButton(win, text="continue", font=('Times New Roman',25,'bold'), text_color="white",height=40, bg_color="#232220", command=accuiel_page)

                            but.pack()
                            but.place(x=620, y=170)

                        
                            win.state("zoome")   
                            win.mainloop()
                            
                        Thank()
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter email from paypal : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=45)
                
                email_pay_bk1= customtkinter.CTkEntry(frame3_bk1, width=290, height=35, placeholder_text='Enter your email')
                email_pay_bk1.place(x=320, y=45)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=175, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=payp)
                buy_bk1.place(x= 315, y=115)
            
            def Cntinue():
                name = name_bk1.get().strip()
                prénom = prenom_bk1.get().strip()     
                phone = phone_bk1.get().strip()
                city = city_bk1.get().strip()
                email = email_bk1.get().strip()
                title = entry.get().strip()
                price = entry_price.get().strip()
                
                if not name:
                    messagebox.showerror("Error", "Please!!! write your information.") 
                elif not prénom:
                    messagebox.showerror("Error", "Please!!! write your information.")
                
                elif not phone.isdigit():
                    messagebox.showerror("Error", "Please enter a valid number") 
                elif not city:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif not email:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif not price:
                    messagebox.showerror("Error", "Please!!! write your information.") 
                elif not title:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif '@' not in email:
                    messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                
                else:
                    with open("facture.csv", "a", newline='') as file:
                        writer = csv.writer(file)
                        writer.writerow([name, prénom, email, city, title, price])
                        
                    head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Choose your payment : ",font=('Times New Roman',20,'bold'))
                    head_bk1.place(x=85, y=350)
                    
                    img_visa = ImageTk.PhotoImage(Image.open("images/visa.jfif"))
                    but_visa = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_visa,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_visa.place(x=380, y=370)
                    
                    img_masterCard = ImageTk.PhotoImage(Image.open("images/mastercard.jfif"))
                    but_masterCard = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_masterCard,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_masterCard.place(x=510, y=370)
                    
                    img_paypal = ImageTk.PhotoImage(Image.open("images/paypal.jfif"))
                    but_paypal = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_paypal,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=paypal)
                    but_paypal.place(x=640, y=370)

                
            win_book1 = Tk()

            img2=ImageTk.PhotoImage(Image.open("images/pattern.png"))
            l1=customtkinter.CTkLabel(win_book1,image=img2)
            l1.pack()
        
            frame=customtkinter.CTkFrame(master = win_book1, width=500, height=640, corner_radius=6)
            frame.place(x = 70,y=40)

            img_book1 = ImageTk.PhotoImage(Image.open("new_images/img-2.jfif"))
            def insert_newlines(text, width=70):
                # Wrap text to fit the specified width
                return '\n'.join(textwrap.wrap(text, width))

            booksdesc = {}

            # Open the CSV file and read the descriptions
            with open('desc.csv', mode='r', newline='', encoding='utf-8') as file:
                reader = csv.reader(file, delimiter=';')
                next(reader)  # Skip the header
                for row in reader:
                    book, description = row
                    # Wrap the description text to fit the frame width
                    booksdesc[book] = insert_newlines(description, width=70)
                                
            label1 = Label(frame,image = img_book1, width=310, height=290)
            label1.pack()
            label1.place(x=60, y=25)
            
            desc_bk1=customtkinter.CTkLabel(frame, text="Description : ",font=('Times New Roman',25,'bold'))
            desc_bk1.place(x=25, y=335)
            
            desc_bk1 = ctk.CTkLabel(frame, text=booksdesc.get('book2', 'No description available'), font=('Times New Roman', 15, 'bold'))
            desc_bk1.place(x=25, y=375)
            
            frame2_bk1=customtkinter.CTkFrame(master = win_book1, width=790, height=440, corner_radius=6)
            frame2_bk1.place(x = 630,y=40)

            head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Enter your information",font=('Times New Roman',35,'bold'))
            head_bk1.place(x=230, y=15)
            name_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your username ')
            name_bk1.place(x=95, y=95)
            prenom_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your lastname')
            prenom_bk1.place(x=420, y=95)
            phone_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your phone')
            phone_bk1.place(x=95, y=155)
            city_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your city')
            city_bk1.place(x=420,y=155) 
            default_text = "Treasure Island"
            entry = customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your title')
            entry.insert(0, default_text)  # Insert default text at index 0
            entry.place(x=420, y=220)
            email_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your email')
            email_bk1.place(x=95, y=220)
            # price_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your price')
            # price_bk1.place(x=95, y=290)
            default_price = "10$"
            entry_price = customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your price')
            entry_price.insert(0, default_price)  # Insert default text at index 0
            entry_price.place(x=95, y=290)
            but_bk1 = customtkinter.CTkButton(frame2_bk1, width=270, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=Cntinue)
            but_bk1.place(x=420, y=290)
                    
            win_book1.state("zoomed")
            win_book1.mainloop()
            
            
 #************************************************** Book 3 *************************************************              
        def book_3():
            win1.destroy()
            def card():
                def visa_ferify():
                    number = num_bk1.get().strip()
                    date = date_bk1.get().strip()
                    code = cod_bk1.get().strip()
                    adress = adress_bk1.get().strip()
                
                    if not number.isdigit():
                        messagebox.showerror("Error", "Please!!! write your correct number.") 
                    elif not date:
                        messagebox.showerror("Error", "Please!!! write your information.")
                    elif not code.isdigit():
                        messagebox.showerror("Error", "Please enter a valid code") 
                    elif not adress:
                        messagebox.showerror("Error", "Please!!! write your information.")                        
                    elif number and date and code and adress:
                        win_book1.destroy()
                        def Thank():
                            win = Tk()
                            def accuiel_page():
                                win.destroy()
                                class InvoiceWindow:
                                    def __init__(self, master, days_remaining):
                                        self.master = master
                                        self.days_remaining = days_remaining  # Initialize the number of days remaining
                                        self.create_invoice_window()

                                    def create_invoice_window(self):
                                        invoice_window = Toplevel(self.master)
                                        invoice_window.title("Invoice")
                                        invoice_window.geometry("500x400+445+320")
                                        invoice_window.resizable(False, False)  # Disable resizing


                                        canvas = Canvas(invoice_window, width=500, height=400, bg="white")
                                        canvas.pack()

                                        canvas.create_text(250, 30, text="Invoice", font=("Helvetica", 24, "bold"), fill="blue", anchor="center")
                                        canvas.create_line(50, 60, 450, 60, fill="blue")

                                        start_date = datetime.now()
                                        end_date = start_date + timedelta(days=15)
                                        with open('facture.csv', 'r', newline='') as file:
                                            reader = csv.reader(file)
                                            # Assuming the data in each row is ordered as Nam, Prén, Email, city, title, price
                                            for row in reader:
                                                Nam, Prén, Email, city, title, price = row
                                            
                                        details = [
                                            ("Username :", Nam),
                                            ("Lastname :", Prén),
                                            ("Book Title:", title),
                                            ("City :", city),
                                            ("Email :", Email),
                                            ("Price:", price),
                                            ("Start_Date:", start_date.strftime("%Y-%m-%d")),
                                            ("End_Date :", end_date.strftime("%Y-%m-%d")),
                                            # Add more details as needed
                                            # ("Remaining Days:", self.days_remaining)  # Display remaining days
                                        ]

                                        y_offset = 100
                                        for label, value in details:
                                            canvas.create_text(190, y_offset, text=label, anchor="e", font=("Helvetica", 12, "bold"), fill="blue")
                                            canvas.create_text(240, y_offset, text=value, anchor="w", font=("Helvetica", 12), fill="black")
                                            y_offset += 30

                                        total_day = canvas.create_text(150, 365, text=f"Total Day: {self.days_remaining} day", font=("Helvetica", 12, "bold")) 
                                            
                                        close_button = Button(invoice_window, text="Close", font=("Helvetica", 12), bg="red", fg="white", command=invoice_window.destroy)
                                        close_button.place(x=420, y=350)

                                    def update_days_remaining(self):
                                        self.days_remaining -= 1

                                class LibraryApp:
                                    def __init__(self, master):
                                        self.master = master
                                        self.days_remaining = self.calculate_remaining_days()  # Initialize the number of days remaining
                                        self.master.title("Library App")
                                        self.master.resizable(False, False)  # Disable resizing
                                        self.master.state("zoomed")
                                        self.create_main_window()

                                    def create_main_window(self):
                                        # Customize window background color
                                        self.master.configure(bg="lightgray")

                                        # Navigation Bar
                                        
                                        nav_frame = tk.Frame(self.master, bg="darkblue", height=60)
                                        nav_frame.pack(side="top", fill="x")

                                        title_label = Label(nav_frame, text="Library App", font=("Helvetica", 20), fg="white", bg="darkblue")
                                        title_label.pack(side="left", padx=20, pady=10)

                                        # Adjust button position
                                        img2=ImageTk.PhotoImage(Image.open("images/bg.jpg"))
                                        l1=customtkinter.CTkLabel(self.master,image=img2)
                                        l1.pack()
                                        book_button = Button(l1, text="Open Invoice", font=("Helvetica", 14), bg="blue", fg="white", command=self.open_book)
                                        book_button.place(relx=0.5, rely=0.3, anchor="center")

                                    def open_book(self):
                                        if self.days_remaining > 0:  # Check if there are remaining days
                                            self.days_remaining -= 1  # Decrement remaining days when opening an invoice
                                            InvoiceWindow(self.master, self.days_remaining)
                                        else:
                                            messagebox.showinfo("Information", "No more days left!")

                                    def calculate_remaining_days(self):
                                        current_date = datetime.now()
                                        start_date = current_date  # Set start date as current date
                                        remaining_days = (current_date - start_date).days
                                        return max(15 - remaining_days, 0)  # Ensure remaining days never go below 0

                                def main():
                                    win = tk.Tk()
                                    app = LibraryApp(win)
                                    win.mainloop()

                                if __name__ == "__main__":
                                    main()
                                

                            img2=ImageTk.PhotoImage(Image.open("images/BOOK.png"))
                            l1=customtkinter.CTkLabel(win,image=img2)
                            l1.pack()
                            thank = customtkinter.CTkLabel(win, text="Thank you for using our service!", text_color="white", bg_color="#171715", font=('Times New Roman',50,'bold'))
                            thank.pack()
                            thank.place(x=350,y=80)
                            but = customtkinter.CTkButton(win, text="continue", font=('Times New Roman',25,'bold'), text_color="white",height=40, bg_color="#232220", command=accuiel_page)

                            but.pack()
                            but.place(x=620, y=170)

                        
                            win.state("zoome")   
                            win.mainloop()
                            
                        Thank()
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter your card : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=30)
                
                num_bk1= customtkinter.CTkEntry(frame3_bk1, width=210, height=35, placeholder_text='Enter card number')
                num_bk1.place(x=255, y=25)
                
                date_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='mm/yy')
                date_bk1.place(x=515, y=25)
                
                cod_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter security card')
                cod_bk1.place(x=255, y=75)
                
                adress_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter your adress')
                adress_bk1.place(x=515, y=75)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=visa_ferify)
                buy_bk1.place(x= 355, y=140)
            
            def paypal():
                def payp():
                    email = email_pay_bk1.get().strip()
                    if not email:
                        messagebox.showerror("Error", "Please!!! write your information.") 
                    elif '@' not in email:
                        messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                    else:
                        win_book1.destroy()
                        def Thank():
                            win = Tk()
                            def accuiel_page():
                                win.destroy()
                                class InvoiceWindow:
                                    def __init__(self, master, days_remaining):
                                        self.master = master
                                        self.days_remaining = days_remaining  # Initialize the number of days remaining
                                        self.create_invoice_window()

                                    def create_invoice_window(self):
                                        invoice_window = Toplevel(self.master)
                                        invoice_window.title("Invoice")
                                        invoice_window.geometry("500x400+445+320")
                                        invoice_window.resizable(False, False)  # Disable resizing


                                        canvas = Canvas(invoice_window, width=500, height=400, bg="white")
                                        canvas.pack()

                                        canvas.create_text(250, 30, text="Invoice", font=("Helvetica", 24, "bold"), fill="blue", anchor="center")
                                        canvas.create_line(50, 60, 450, 60, fill="blue")

                                        start_date = datetime.now()
                                        end_date = start_date + timedelta(days=15)
                                        with open('facture.csv', 'r', newline='') as file:
                                            reader = csv.reader(file)
                                            # Assuming the data in each row is ordered as Nam, Prén, Email, city, title, price
                                            for row in reader:
                                                Nam, Prén, Email, city, title, price = row
                                            
                                        details = [
                                            ("Username :", Nam),
                                            ("Lastname :", Prén),
                                            ("Book Title:", title),
                                            ("City :", city),
                                            ("Email :", Email),
                                            ("Price:", price),
                                            ("Start_Date:", start_date.strftime("%Y-%m-%d")),
                                            ("End_Date :", end_date.strftime("%Y-%m-%d")),
                                            # Add more details as needed
                                            # ("Remaining Days:", self.days_remaining)  # Display remaining days
                                        ]

                                        y_offset = 100
                                        for label, value in details:
                                            canvas.create_text(190, y_offset, text=label, anchor="e", font=("Helvetica", 12, "bold"), fill="blue")
                                            canvas.create_text(240, y_offset, text=value, anchor="w", font=("Helvetica", 12), fill="black")
                                            y_offset += 30

                                        total_day = canvas.create_text(150, 365, text=f"Total Day: {self.days_remaining} day", font=("Helvetica", 12, "bold")) 
                                            
                                        close_button = Button(invoice_window, text="Close", font=("Helvetica", 12), bg="red", fg="white", command=invoice_window.destroy)
                                        close_button.place(x=420, y=350)

                                    def update_days_remaining(self):
                                        self.days_remaining -= 1

                                class LibraryApp:
                                    def __init__(self, master):
                                        self.master = master
                                        self.days_remaining = self.calculate_remaining_days()  # Initialize the number of days remaining
                                        self.master.title("Library App")
                                        self.master.resizable(False, False)  # Disable resizing
                                        self.master.state("zoomed")
                                        self.create_main_window()

                                    def create_main_window(self):
                                        # Customize window background color
                                        self.master.configure(bg="lightgray")

                                        # Navigation Bar
                                        
                                        nav_frame = tk.Frame(self.master, bg="darkblue", height=60)
                                        nav_frame.pack(side="top", fill="x")

                                        title_label = Label(nav_frame, text="Library App", font=("Helvetica", 20), fg="white", bg="darkblue")
                                        title_label.pack(side="left", padx=20, pady=10)

                                        # Adjust button position
                                        img2=ImageTk.PhotoImage(Image.open("images/bg.jpg"))
                                        l1=customtkinter.CTkLabel(self.master,image=img2)
                                        l1.pack()
                                        book_button = Button(l1, text="Open Invoice", font=("Helvetica", 14), bg="blue", fg="white", command=self.open_book)
                                        book_button.place(relx=0.5, rely=0.3, anchor="center")

                                    def open_book(self):
                                        if self.days_remaining > 0:  # Check if there are remaining days
                                            self.days_remaining -= 1  # Decrement remaining days when opening an invoice
                                            InvoiceWindow(self.master, self.days_remaining)
                                        else:
                                            messagebox.showinfo("Information", "No more days left!")

                                    def calculate_remaining_days(self):
                                        current_date = datetime.now()
                                        start_date = current_date  # Set start date as current date
                                        remaining_days = (current_date - start_date).days
                                        return max(15 - remaining_days, 0)  # Ensure remaining days never go below 0

                                def main():
                                    win = tk.Tk()
                                    app = LibraryApp(win)
                                    win.mainloop()

                                if __name__ == "__main__":
                                    main()
                                

                            img2=ImageTk.PhotoImage(Image.open("images/BOOK.png"))
                            l1=customtkinter.CTkLabel(win,image=img2)
                            l1.pack()
                            thank = customtkinter.CTkLabel(win, text="Thank you for using our service!", text_color="white", bg_color="#171715", font=('Times New Roman',50,'bold'))
                            thank.pack()
                            thank.place(x=350,y=80)
                            but = customtkinter.CTkButton(win, text="continue", font=('Times New Roman',25,'bold'), text_color="white",height=40, bg_color="#232220", command=accuiel_page)

                            but.pack()
                            but.place(x=620, y=170)
                        
                            win.state("zoome")   
                            win.mainloop()
                            
                        Thank()
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter email from paypal : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=45)
                
                email_pay_bk1= customtkinter.CTkEntry(frame3_bk1, width=290, height=35, placeholder_text='Enter your email')
                email_pay_bk1.place(x=320, y=45)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=175, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=payp)
                buy_bk1.place(x= 315, y=115)
            
            def Cntinue():
                name = name_bk1.get().strip()
                prénom = prenom_bk1.get().strip()     
                phone = phone_bk1.get().strip()
                city = city_bk1.get().strip()
                email = email_bk1.get().strip()
                title = entry.get().strip()
                price = entry_price.get().strip()
                
                if not name:
                    messagebox.showerror("Error", "Please!!! write your information.") 
                elif not prénom:
                    messagebox.showerror("Error", "Please!!! write your information.")
                
                elif not phone.isdigit():
                    messagebox.showerror("Error", "Please enter a valid number") 
                elif not city:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif not email:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif '@' not in email:
                    messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                else:
                    with open("facture.csv", "a", newline='') as file:
                        writer = csv.writer(file)
                        writer.writerow([name, prénom, email, city, title, price])
                    head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Choose your payment : ",font=('Times New Roman',20,'bold'))
                    head_bk1.place(x=85, y=350)
                    
                    img_visa = ImageTk.PhotoImage(Image.open("images/visa.jfif"))
                    but_visa = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_visa,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_visa.place(x=380, y=370)
                    
                    img_masterCard = ImageTk.PhotoImage(Image.open("images/mastercard.jfif"))
                    but_masterCard = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_masterCard,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_masterCard.place(x=510, y=370)
                    
                    img_paypal = ImageTk.PhotoImage(Image.open("images/paypal.jfif"))
                    but_paypal = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_paypal,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=paypal)
                    but_paypal.place(x=640, y=370)
                    
            win_book1 = Tk()

            img2=ImageTk.PhotoImage(Image.open("images/pattern.png"))
            l1=customtkinter.CTkLabel(win_book1,image=img2)
            l1.pack()
        
            frame=customtkinter.CTkFrame(master = win_book1, width=500, height=640, corner_radius=6)
            frame.place(x = 70,y=40)

            img_book1 = ImageTk.PhotoImage(Image.open("new_images/img-4.jfif"))
            def insert_newlines(text, width=70):
                # Wrap text to fit the specified width
                return '\n'.join(textwrap.wrap(text, width))

            booksdesc = {}

            # Open the CSV file and read the descriptions
            with open('desc.csv', mode='r', newline='', encoding='utf-8') as file:
                reader = csv.reader(file, delimiter=';')
                next(reader)  # Skip the header
                for row in reader:
                    book, description = row
                    # Wrap the description text to fit the frame width
                    booksdesc[book] = insert_newlines(description, width=70)
                    
            label1 = Label(frame,image = img_book1, width=310, height=290)
            label1.pack()
            label1.place(x=60, y=25)
            
            desc_bk1=customtkinter.CTkLabel(frame, text="Description : ",font=('Times New Roman',25,'bold'))
            desc_bk1.place(x=25, y=335)
            
            desc_bk1 = ctk.CTkLabel(frame, text=booksdesc.get('book3', 'No description available'), font=('Times New Roman', 15, 'bold'))
            desc_bk1.place(x=25, y=375)
            
            frame2_bk1=customtkinter.CTkFrame(master = win_book1, width=790, height=440, corner_radius=6)
            frame2_bk1.place(x = 630,y=40)

            head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Enter your information",font=('Times New Roman',35,'bold'))
            head_bk1.place(x=230, y=15)
            name_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your username ')
            name_bk1.place(x=95, y=95)
            prenom_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your lastname')
            prenom_bk1.place(x=420, y=95)
            phone_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your phone')
            phone_bk1.place(x=95, y=155)
            city_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your city')
            city_bk1.place(x=420, y=155)
            default_text = "Summer adventure stories"
            entry = customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your title')
            entry.insert(0, default_text)  # Insert default text at index 0
            entry.place(x=420, y=220)
            default_price = "14$"
            entry_price = customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your price')
            entry_price.insert(0, default_price)  # Insert default text at index 0
            entry_price.place(x=95, y=290)
            email_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your email')
            email_bk1.place(x=95, y=220)
            but_bk1 = customtkinter.CTkButton(frame2_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=Cntinue)
            but_bk1.place(x=420, y=290)
            win_book1.state("zoomed")
            win_book1.mainloop()    
                
# ************************************************************* Book 4 *********************************************************
        def book_4():
            win1.destroy()
            def card():
                def visa_ferify():
                    number = num_bk1.get().strip()
                    date = date_bk1.get().strip()
                    code = cod_bk1.get().strip()
                    adress = adress_bk1.get().strip()
                
                    if not number.isdigit():
                        messagebox.showerror("Error", "Please!!! write your correct number.") 
                    elif not date:
                        messagebox.showerror("Error", "Please!!! write your information.")
                    elif not code.isdigit():
                        messagebox.showerror("Error", "Please enter a valid code") 
                    elif not adress:
                        messagebox.showerror("Error", "Please!!! write your information.")                        
                    elif number and date and code and adress:
                        win_book1.destroy()
                        def Thank():
                            win = Tk()
                            def accuiel_page():
                                win.destroy()
                                class InvoiceWindow:
                                    def __init__(self, master, days_remaining):
                                        self.master = master
                                        self.days_remaining = days_remaining  # Initialize the number of days remaining
                                        self.create_invoice_window()

                                    def create_invoice_window(self):
                                        invoice_window = Toplevel(self.master)
                                        invoice_window.title("Invoice")
                                        invoice_window.geometry("500x400+445+320")
                                        invoice_window.resizable(False, False)  # Disable resizing


                                        canvas = Canvas(invoice_window, width=500, height=400, bg="white")
                                        canvas.pack()

                                        canvas.create_text(250, 30, text="Invoice", font=("Helvetica", 24, "bold"), fill="blue", anchor="center")
                                        canvas.create_line(50, 60, 450, 60, fill="blue")

                                        start_date = datetime.now()
                                        end_date = start_date + timedelta(days=15)
                                        with open('facture.csv', 'r', newline='') as file:
                                            reader = csv.reader(file)
                                            # Assuming the data in each row is ordered as Nam, Prén, Email, city, title, price
                                            for row in reader:
                                                Nam, Prén, Email, city, title, price = row
                                            
                                        details = [
                                            ("Username :", Nam),
                                            ("Lastname :", Prén),
                                            ("Book Title:", title),
                                            ("City :", city),
                                            ("Email :", Email),
                                            ("Price:", price),
                                            ("Start_Date:", start_date.strftime("%Y-%m-%d")),
                                            ("End_Date :", end_date.strftime("%Y-%m-%d")),
                                            # Add more details as needed
                                            # ("Remaining Days:", self.days_remaining)  # Display remaining days
                                        ]

                                        y_offset = 100
                                        for label, value in details:
                                            canvas.create_text(190, y_offset, text=label, anchor="e", font=("Helvetica", 12, "bold"), fill="blue")
                                            canvas.create_text(240, y_offset, text=value, anchor="w", font=("Helvetica", 12), fill="black")
                                            y_offset += 30

                                        total_day = canvas.create_text(150, 365, text=f"Total Day: {self.days_remaining} day", font=("Helvetica", 12, "bold")) 
                                            
                                        close_button = Button(invoice_window, text="Close", font=("Helvetica", 12), bg="red", fg="white", command=invoice_window.destroy)
                                        close_button.place(x=420, y=350)

                                    def update_days_remaining(self):
                                        self.days_remaining -= 1

                                class LibraryApp:
                                    def __init__(self, master):
                                        self.master = master
                                        self.days_remaining = self.calculate_remaining_days()  # Initialize the number of days remaining
                                        self.master.title("Library App")
                                        self.master.resizable(False, False)  # Disable resizing
                                        self.master.state("zoomed")
                                        self.create_main_window()

                                    def create_main_window(self):
                                        # Customize window background color
                                        self.master.configure(bg="lightgray")

                                        # Navigation Bar
                                        
                                        nav_frame = tk.Frame(self.master, bg="darkblue", height=60)
                                        nav_frame.pack(side="top", fill="x")

                                        title_label = Label(nav_frame, text="Library App", font=("Helvetica", 20), fg="white", bg="darkblue")
                                        title_label.pack(side="left", padx=20, pady=10)

                                        # Adjust button position
                                        img2=ImageTk.PhotoImage(Image.open("images/bg.jpg"))
                                        l1=customtkinter.CTkLabel(self.master,image=img2)
                                        l1.pack()
                                        book_button = Button(l1, text="Open Invoice", font=("Helvetica", 14), bg="blue", fg="white", command=self.open_book)
                                        book_button.place(relx=0.5, rely=0.3, anchor="center")

                                    def open_book(self):
                                        if self.days_remaining > 0:  # Check if there are remaining days
                                            self.days_remaining -= 1  # Decrement remaining days when opening an invoice
                                            InvoiceWindow(self.master, self.days_remaining)
                                        else:
                                            messagebox.showinfo("Information", "No more days left!")

                                    def calculate_remaining_days(self):
                                        current_date = datetime.now()
                                        start_date = current_date  # Set start date as current date
                                        remaining_days = (current_date - start_date).days
                                        return max(15 - remaining_days, 0)  # Ensure remaining days never go below 0

                                def main():
                                    win = tk.Tk()
                                    app = LibraryApp(win)
                                    win.mainloop()

                                if __name__ == "__main__":
                                    main()
                                

                            img2=ImageTk.PhotoImage(Image.open("images/BOOK.png"))
                            l1=customtkinter.CTkLabel(win,image=img2)
                            l1.pack()
                            thank = customtkinter.CTkLabel(win, text="Thank you for using our service!", text_color="white", bg_color="#171715", font=('Times New Roman',50,'bold'))
                            thank.pack()
                            thank.place(x=350,y=80)
                            but = customtkinter.CTkButton(win, text="continue", font=('Times New Roman',25,'bold'), text_color="white",height=40, bg_color="#232220", command=accuiel_page)

                            but.pack()
                            but.place(x=620, y=170)

                        
                            win.state("zoome")   
                            win.mainloop()
                            
                        Thank()
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter your card : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=30)
                
                num_bk1= customtkinter.CTkEntry(frame3_bk1, width=210, height=35, placeholder_text='Enter card number')
                num_bk1.place(x=255, y=25)
                
                date_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='mm/yy')
                date_bk1.place(x=515, y=25)
                
                cod_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter security card')
                cod_bk1.place(x=255, y=75)
                
                adress_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter your adress')
                adress_bk1.place(x=515, y=75)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=visa_ferify)
                buy_bk1.place(x= 355, y=140)
            
            def paypal():
                def payp():
                    email = email_pay_bk1.get().strip()
                    if not email:
                        messagebox.showerror("Error", "Please!!! write your information.") 
                    elif '@' not in email:
                        messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                    else:
                        win_book1.destroy()
                        def Thank():
                            win = Tk()
                            def accuiel_page():
                                win.destroy()
                                class InvoiceWindow:
                                    def __init__(self, master, days_remaining):
                                        self.master = master
                                        self.days_remaining = days_remaining  # Initialize the number of days remaining
                                        self.create_invoice_window()

                                    def create_invoice_window(self):
                                        invoice_window = Toplevel(self.master)
                                        invoice_window.title("Invoice")
                                        invoice_window.geometry("500x400+445+320")
                                        invoice_window.resizable(False, False)  # Disable resizing


                                        canvas = Canvas(invoice_window, width=500, height=400, bg="white")
                                        canvas.pack()

                                        canvas.create_text(250, 30, text="Invoice", font=("Helvetica", 24, "bold"), fill="blue", anchor="center")
                                        canvas.create_line(50, 60, 450, 60, fill="blue")

                                        start_date = datetime.now()
                                        end_date = start_date + timedelta(days=15)
                                        with open('facture.csv', 'r', newline='') as file:
                                            reader = csv.reader(file)
                                            # Assuming the data in each row is ordered as Nam, Prén, Email, city, title, price
                                            for row in reader:
                                                Nam, Prén, Email, city, title, price = row
                                            
                                        details = [
                                            ("Username :", Nam),
                                            ("Lastname :", Prén),
                                            ("Book Title:", title),
                                            ("City :", city),
                                            ("Email :", Email),
                                            ("Price:", price),
                                            ("Start_Date:", start_date.strftime("%Y-%m-%d")),
                                            ("End_Date :", end_date.strftime("%Y-%m-%d")),
                                            # Add more details as needed
                                            # ("Remaining Days:", self.days_remaining)  # Display remaining days
                                        ]

                                        y_offset = 100
                                        for label, value in details:
                                            canvas.create_text(190, y_offset, text=label, anchor="e", font=("Helvetica", 12, "bold"), fill="blue")
                                            canvas.create_text(240, y_offset, text=value, anchor="w", font=("Helvetica", 12), fill="black")
                                            y_offset += 30

                                        total_day = canvas.create_text(150, 365, text=f"Total Day: {self.days_remaining} day", font=("Helvetica", 12, "bold")) 
                                            
                                        close_button = Button(invoice_window, text="Close", font=("Helvetica", 12), bg="red", fg="white", command=invoice_window.destroy)
                                        close_button.place(x=420, y=350)

                                    def update_days_remaining(self):
                                        self.days_remaining -= 1

                                class LibraryApp:
                                    def __init__(self, master):
                                        self.master = master
                                        self.days_remaining = self.calculate_remaining_days()  # Initialize the number of days remaining
                                        self.master.title("Library App")
                                        self.master.resizable(False, False)  # Disable resizing
                                        self.master.state("zoomed")
                                        self.create_main_window()

                                    def create_main_window(self):
                                        # Customize window background color
                                        self.master.configure(bg="lightgray")

                                        # Navigation Bar
                                        
                                        nav_frame = tk.Frame(self.master, bg="darkblue", height=60)
                                        nav_frame.pack(side="top", fill="x")

                                        title_label = Label(nav_frame, text="Library App", font=("Helvetica", 20), fg="white", bg="darkblue")
                                        title_label.pack(side="left", padx=20, pady=10)

                                        # Adjust button position
                                        img2=ImageTk.PhotoImage(Image.open("images/bg.jpg"))
                                        l1=customtkinter.CTkLabel(self.master,image=img2)
                                        l1.pack()
                                        book_button = Button(l1, text="Open Invoice", font=("Helvetica", 14), bg="blue", fg="white", command=self.open_book)
                                        book_button.place(relx=0.5, rely=0.3, anchor="center")

                                    def open_book(self):
                                        if self.days_remaining > 0:  # Check if there are remaining days
                                            self.days_remaining -= 1  # Decrement remaining days when opening an invoice
                                            InvoiceWindow(self.master, self.days_remaining)
                                        else:
                                            messagebox.showinfo("Information", "No more days left!")

                                    def calculate_remaining_days(self):
                                        current_date = datetime.now()
                                        start_date = current_date  # Set start date as current date
                                        remaining_days = (current_date - start_date).days
                                        return max(15 - remaining_days, 0)  # Ensure remaining days never go below 0

                                def main():
                                    win = tk.Tk()
                                    app = LibraryApp(win)
                                    win.mainloop()

                                if __name__ == "__main__":
                                    main()
                                

                            img2=ImageTk.PhotoImage(Image.open("images/BOOK.png"))
                            l1=customtkinter.CTkLabel(win,image=img2)
                            l1.pack()
                            thank = customtkinter.CTkLabel(win, text="Thank you for using our service!", text_color="white", bg_color="#171715", font=('Times New Roman',50,'bold'))
                            thank.pack()
                            thank.place(x=350,y=80)
                            but = customtkinter.CTkButton(win, text="continue", font=('Times New Roman',25,'bold'), text_color="white",height=40, bg_color="#232220", command=accuiel_page)

                            but.pack()
                            but.place(x=620, y=170)
                        
                            win.state("zoome")   
                            win.mainloop()
                            
                        Thank()
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter email from paypal : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=45)
                
                email_pay_bk1= customtkinter.CTkEntry(frame3_bk1, width=290, height=35, placeholder_text='Enter your email')
                email_pay_bk1.place(x=320, y=45)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=175, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=payp)
                buy_bk1.place(x= 315, y=115)
            
            def Cntinue():
                name = name_bk1.get().strip()
                prénom = prenom_bk1.get().strip()     
                phone = phone_bk1.get().strip()
                city = city_bk1.get().strip()
                email = email_bk1.get().strip()
                title = entry.get().strip()
                price = entry_price.get().strip()
                
                if not name:
                    messagebox.showerror("Error", "Please!!! write your information.") 
                elif not prénom:
                    messagebox.showerror("Error", "Please!!! write your information.")
                
                elif not phone.isdigit():
                    messagebox.showerror("Error", "Please enter a valid number") 
                elif not city:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif not email:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif '@' not in email:
                    messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                else:
                    with open("facture.csv", "a", newline='') as file:
                        writer = csv.writer(file)
                        writer.writerow([name, prénom, email, city, title, price])
                    head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Choose your payment : ",font=('Times New Roman',20,'bold'))
                    head_bk1.place(x=85, y=350)
                    
                    img_visa = ImageTk.PhotoImage(Image.open("images/visa.jfif"))
                    but_visa = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_visa,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_visa.place(x=380, y=370)
                    
                    img_masterCard = ImageTk.PhotoImage(Image.open("images/mastercard.jfif"))
                    but_masterCard = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_masterCard,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_masterCard.place(x=510, y=370)
                    
                    img_paypal = ImageTk.PhotoImage(Image.open("images/paypal.jfif"))
                    but_paypal = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_paypal,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=paypal)
                    but_paypal.place(x=640, y=370)
                
            win_book1 = Tk()

            img2=ImageTk.PhotoImage(Image.open("images/pattern.png"))

            l1=customtkinter.CTkLabel(win_book1,image=img2)
            l1.pack()
        
            frame=customtkinter.CTkFrame(master = win_book1, width=500, height=640, corner_radius=6)
            frame.place(x = 70,y=40)

            img_book1 = ImageTk.PhotoImage(Image.open("new_images/img-1.jpg"))
            def insert_newlines(text, width=70):
                # Wrap text to fit the specified width
                return '\n'.join(textwrap.wrap(text, width))

            booksdesc = {}

            # Open the CSV file and read the descriptions
            with open('desc.csv', mode='r', newline='', encoding='utf-8') as file:
                reader = csv.reader(file, delimiter=';')
                next(reader)  # Skip the header
                for row in reader:
                    book, description = row
                    # Wrap the description text to fit the frame width
                    booksdesc[book] = insert_newlines(description, width=70)
            label1 = Label(frame,image = img_book1, width=310, height=290)
            label1.pack()
            label1.place(x=60, y=25)
            
            desc_bk1=customtkinter.CTkLabel(frame, text="Description : ",font=('Times New Roman',25,'bold'))
            desc_bk1.place(x=25, y=335)
            
            desc_bk1 = ctk.CTkLabel(frame, text=booksdesc.get('book4', 'No description available'), font=('Times New Roman', 15, 'bold'))
            desc_bk1.place(x=25, y=375)
            
            frame2_bk1=customtkinter.CTkFrame(master = win_book1, width=790, height=440, corner_radius=6)
            frame2_bk1.place(x = 630,y=40)

            head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Enter your information",font=('Times New Roman',35,'bold'))
            head_bk1.place(x=230, y=15)
            name_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your username ')
            name_bk1.place(x=95, y=95)
            prenom_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your lastname')
            prenom_bk1.place(x=420, y=95)
            phone_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your phone')
            phone_bk1.place(x=95, y=155)
            city_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your city')
            city_bk1.place(x=420, y=155)
            default_text = "Darkest dawn"
            entry = customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your title')
            entry.insert(0, default_text)  # Insert default text at index 0
            entry.place(x=420, y=220)
            default_price = "8$"
            entry_price = customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your price')
            entry_price.insert(0, default_price)  # Insert default text at index 0
            entry_price.place(x=95, y=290)
            email_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your email')
            email_bk1.place(x=95, y=220)
            but_bk1 = customtkinter.CTkButton(frame2_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=Cntinue)
            but_bk1.place(x=420, y=290)
                    
            win_book1.state("zoomed")
            win_book1.mainloop()

#********************************************************************* Book 5 ***************************************************************************
        def book_5():
            win1.destroy()
            def card():
                def visa_ferify():
                    number = num_bk1.get().strip()
                    date = date_bk1.get().strip()
                    code = cod_bk1.get().strip()
                    adress = adress_bk1.get().strip()
                
                    if not number.isdigit():
                        messagebox.showerror("Error", "Please!!! write your correct number.") 
                    elif not date:
                        messagebox.showerror("Error", "Please!!! write your information.")
                    elif not code.isdigit():
                        messagebox.showerror("Error", "Please enter a valid code") 
                    elif not adress:
                        messagebox.showerror("Error", "Please!!! write your information.")                        
                    elif number and date and code and adress:
                        win_book1.destroy()
                        def Thank():
                            win = Tk()
                            def accuiel_page():
                                win.destroy()
                                class InvoiceWindow:
                                    def __init__(self, master, days_remaining):
                                        self.master = master
                                        self.days_remaining = days_remaining  # Initialize the number of days remaining
                                        self.create_invoice_window()

                                    def create_invoice_window(self):
                                        invoice_window = Toplevel(self.master)
                                        invoice_window.title("Invoice")
                                        invoice_window.geometry("500x400+445+320")
                                        invoice_window.resizable(False, False)  # Disable resizing


                                        canvas = Canvas(invoice_window, width=500, height=400, bg="white")
                                        canvas.pack()

                                        canvas.create_text(250, 30, text="Invoice", font=("Helvetica", 24, "bold"), fill="blue", anchor="center")
                                        canvas.create_line(50, 60, 450, 60, fill="blue")

                                        start_date = datetime.now()
                                        end_date = start_date + timedelta(days=15)
                                        with open('facture.csv', 'r', newline='') as file:
                                            reader = csv.reader(file)
                                            # Assuming the data in each row is ordered as Nam, Prén, Email, city, title, price
                                            for row in reader:
                                                Nam, Prén, Email, city, title, price = row
                                            
                                        details = [
                                            ("Username :", Nam),
                                            ("Lastname :", Prén),
                                            ("Book Title:", title),
                                            ("City :", city),
                                            ("Email :", Email),
                                            ("Price:", price),
                                            ("Start_Date:", start_date.strftime("%Y-%m-%d")),
                                            ("End_Date :", end_date.strftime("%Y-%m-%d")),
                                            # Add more details as needed
                                            # ("Remaining Days:", self.days_remaining)  # Display remaining days
                                        ]

                                        y_offset = 100
                                        for label, value in details:
                                            canvas.create_text(190, y_offset, text=label, anchor="e", font=("Helvetica", 12, "bold"), fill="blue")
                                            canvas.create_text(240, y_offset, text=value, anchor="w", font=("Helvetica", 12), fill="black")
                                            y_offset += 30

                                        total_day = canvas.create_text(150, 365, text=f"Total Day: {self.days_remaining} day", font=("Helvetica", 12, "bold")) 
                                            
                                        close_button = Button(invoice_window, text="Close", font=("Helvetica", 12), bg="red", fg="white", command=invoice_window.destroy)
                                        close_button.place(x=420, y=350)

                                    def update_days_remaining(self):
                                        self.days_remaining -= 1

                                class LibraryApp:
                                    def __init__(self, master):
                                        self.master = master
                                        self.days_remaining = self.calculate_remaining_days()  # Initialize the number of days remaining
                                        self.master.title("Library App")
                                        self.master.resizable(False, False)  # Disable resizing
                                        self.master.state("zoomed")
                                        self.create_main_window()

                                    def create_main_window(self):
                                        # Customize window background color
                                        self.master.configure(bg="lightgray")

                                        # Navigation Bar
                                        
                                        nav_frame = tk.Frame(self.master, bg="darkblue", height=60)
                                        nav_frame.pack(side="top", fill="x")

                                        title_label = Label(nav_frame, text="Library App", font=("Helvetica", 20), fg="white", bg="darkblue")
                                        title_label.pack(side="left", padx=20, pady=10)

                                        # Adjust button position
                                        img2=ImageTk.PhotoImage(Image.open("images/bg.jpg"))
                                        l1=customtkinter.CTkLabel(self.master,image=img2)
                                        l1.pack()
                                        book_button = Button(l1, text="Open Invoice", font=("Helvetica", 14), bg="blue", fg="white", command=self.open_book)
                                        book_button.place(relx=0.5, rely=0.3, anchor="center")

                                    def open_book(self):
                                        if self.days_remaining > 0:  # Check if there are remaining days
                                            self.days_remaining -= 1  # Decrement remaining days when opening an invoice
                                            InvoiceWindow(self.master, self.days_remaining)
                                        else:
                                            messagebox.showinfo("Information", "No more days left!")

                                    def calculate_remaining_days(self):
                                        current_date = datetime.now()
                                        start_date = current_date  # Set start date as current date
                                        remaining_days = (current_date - start_date).days
                                        return max(15 - remaining_days, 0)  # Ensure remaining days never go below 0

                                def main():
                                    win = tk.Tk()
                                    app = LibraryApp(win)
                                    win.mainloop()

                                if __name__ == "__main__":
                                    main()
                                

                            img2=ImageTk.PhotoImage(Image.open("images/BOOK.png"))
                            l1=customtkinter.CTkLabel(win,image=img2)
                            l1.pack()
                            thank = customtkinter.CTkLabel(win, text="Thank you for using our service!", text_color="white", bg_color="#171715", font=('Times New Roman',50,'bold'))
                            thank.pack()
                            thank.place(x=350,y=80)
                            but = customtkinter.CTkButton(win, text="continue", font=('Times New Roman',25,'bold'), text_color="white",height=40, bg_color="#232220", command=accuiel_page)

                            but.pack()
                            but.place(x=620, y=170)

                        
                            win.state("zoome")   
                            win.mainloop()
                            
                        Thank()
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter your card : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=30)
                
                num_bk1= customtkinter.CTkEntry(frame3_bk1, width=210, height=35, placeholder_text='Enter card number')
                num_bk1.place(x=255, y=25)
                
                date_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='mm/yy')
                date_bk1.place(x=515, y=25)
                
                cod_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter security card')
                cod_bk1.place(x=255, y=75)
                
                adress_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter your adress')
                adress_bk1.place(x=515, y=75)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=visa_ferify)
                buy_bk1.place(x= 355, y=140)
            
            def paypal():
                def payp():
                    email = email_pay_bk1.get().strip()
                    if not email:
                        messagebox.showerror("Error", "Please!!! write your information.") 
                    elif '@' not in email:
                        messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                    else:
                        win_book1.destroy()
                        def Thank():
                            win = Tk()
                            def accuiel_page():
                                win.destroy()
                                class InvoiceWindow:
                                    def __init__(self, master, days_remaining):
                                        self.master = master
                                        self.days_remaining = days_remaining  # Initialize the number of days remaining
                                        self.create_invoice_window()

                                    def create_invoice_window(self):
                                        invoice_window = Toplevel(self.master)
                                        invoice_window.title("Invoice")
                                        invoice_window.geometry("500x400+445+320")
                                        invoice_window.resizable(False, False)  # Disable resizing


                                        canvas = Canvas(invoice_window, width=500, height=400, bg="white")
                                        canvas.pack()

                                        canvas.create_text(250, 30, text="Invoice", font=("Helvetica", 24, "bold"), fill="blue", anchor="center")
                                        canvas.create_line(50, 60, 450, 60, fill="blue")

                                        start_date = datetime.now()
                                        end_date = start_date + timedelta(days=15)
                                        with open('facture.csv', 'r', newline='') as file:
                                            reader = csv.reader(file)
                                            # Assuming the data in each row is ordered as Nam, Prén, Email, city, title, price
                                            for row in reader:
                                                Nam, Prén, Email, city, title, price = row
                                            
                                        details = [
                                            ("Username :", Nam),
                                            ("Lastname :", Prén),
                                            ("Book Title:", title),
                                            ("City :", city),
                                            ("Email :", Email),
                                            ("Price:", price),
                                            ("Start_Date:", start_date.strftime("%Y-%m-%d")),
                                            ("End_Date :", end_date.strftime("%Y-%m-%d")),
                                            # Add more details as needed
                                            # ("Remaining Days:", self.days_remaining)  # Display remaining days
                                        ]

                                        y_offset = 100
                                        for label, value in details:
                                            canvas.create_text(190, y_offset, text=label, anchor="e", font=("Helvetica", 12, "bold"), fill="blue")
                                            canvas.create_text(240, y_offset, text=value, anchor="w", font=("Helvetica", 12), fill="black")
                                            y_offset += 30

                                        total_day = canvas.create_text(150, 365, text=f"Total Day: {self.days_remaining} day", font=("Helvetica", 12, "bold")) 
                                            
                                        close_button = Button(invoice_window, text="Close", font=("Helvetica", 12), bg="red", fg="white", command=invoice_window.destroy)
                                        close_button.place(x=420, y=350)

                                    def update_days_remaining(self):
                                        self.days_remaining -= 1

                                class LibraryApp:
                                    def __init__(self, master):
                                        self.master = master
                                        self.days_remaining = self.calculate_remaining_days()  # Initialize the number of days remaining
                                        self.master.title("Library App")
                                        self.master.resizable(False, False)  # Disable resizing
                                        self.master.state("zoomed")
                                        self.create_main_window()

                                    def create_main_window(self):
                                        # Customize window background color
                                        self.master.configure(bg="lightgray")

                                        # Navigation Bar
                                        
                                        nav_frame = tk.Frame(self.master, bg="darkblue", height=60)
                                        nav_frame.pack(side="top", fill="x")

                                        title_label = Label(nav_frame, text="Library App", font=("Helvetica", 20), fg="white", bg="darkblue")
                                        title_label.pack(side="left", padx=20, pady=10)

                                        # Adjust button position
                                        img2=ImageTk.PhotoImage(Image.open("images/bg.jpg"))
                                        l1=customtkinter.CTkLabel(self.master,image=img2)
                                        l1.pack()
                                        book_button = Button(l1, text="Open Invoice", font=("Helvetica", 14), bg="blue", fg="white", command=self.open_book)
                                        book_button.place(relx=0.5, rely=0.3, anchor="center")

                                    def open_book(self):
                                        if self.days_remaining > 0:  # Check if there are remaining days
                                            self.days_remaining -= 1  # Decrement remaining days when opening an invoice
                                            InvoiceWindow(self.master, self.days_remaining)
                                        else:
                                            messagebox.showinfo("Information", "No more days left!")

                                    def calculate_remaining_days(self):
                                        current_date = datetime.now()
                                        start_date = current_date  # Set start date as current date
                                        remaining_days = (current_date - start_date).days
                                        return max(15 - remaining_days, 0)  # Ensure remaining days never go below 0

                                def main():
                                    win = tk.Tk()
                                    app = LibraryApp(win)
                                    win.mainloop()

                                if __name__ == "__main__":
                                    main()
                                

                            img2=ImageTk.PhotoImage(Image.open("images/BOOK.png"))
                            l1=customtkinter.CTkLabel(win,image=img2)
                            l1.pack()
                            thank = customtkinter.CTkLabel(win, text="Thank you for using our service!", text_color="white", bg_color="#171715", font=('Times New Roman',50,'bold'))
                            thank.pack()
                            thank.place(x=350,y=80)
                            but = customtkinter.CTkButton(win, text="continue", font=('Times New Roman',25,'bold'), text_color="white",height=40, bg_color="#232220", command=accuiel_page)

                            but.pack()
                            but.place(x=620, y=170)
                        
                            win.state("zoome")   
                            win.mainloop()
                            
                        Thank()
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter email from paypal : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=45)
                
                email_pay_bk1= customtkinter.CTkEntry(frame3_bk1, width=290, height=35, placeholder_text='Enter your email')
                email_pay_bk1.place(x=320, y=45)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=175, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'),command=payp)
                buy_bk1.place(x= 315, y=115)
            
            def Cntinue():
                name = name_bk1.get().strip()
                prénom = prenom_bk1.get().strip()     
                phone = phone_bk1.get().strip()
                city = city_bk1.get().strip()
                email = email_bk1.get().strip()
                title = entry.get().strip()
                price = entry_price.get().strip()
                
                if not name:
                    messagebox.showerror("Error", "Please!!! write your information.") 
                elif not prénom:
                    messagebox.showerror("Error", "Please!!! write your information.")
                
                elif not phone.isdigit():
                    messagebox.showerror("Error", "Please enter a valid number") 
                elif not city:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif not email:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif '@' not in email:
                    messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                else:
                    with open("facture.csv", "a", newline='') as file:
                        writer = csv.writer(file)
                        writer.writerow([name, prénom, email, city, title, price])
                    head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Choose your payment : ",font=('Times New Roman',20,'bold'))
                    head_bk1.place(x=85, y=350)
                    
                    img_visa = ImageTk.PhotoImage(Image.open("images/visa.jfif"))
                    but_visa = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_visa,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_visa.place(x=380, y=370)
                    
                    img_masterCard = ImageTk.PhotoImage(Image.open("images/mastercard.jfif"))
                    but_masterCard = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_masterCard,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_masterCard.place(x=510, y=370)
                    
                    img_paypal = ImageTk.PhotoImage(Image.open("images/paypal.jfif"))
                    but_paypal = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_paypal,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=paypal)
                    but_paypal.place(x=640, y=370)
                
            win_book1 = Tk()

            img2=ImageTk.PhotoImage(Image.open("images/pattern.png"))
            l1=customtkinter.CTkLabel(win_book1,image=img2)
            l1.pack()
        
            frame=customtkinter.CTkFrame(master = win_book1, width=500, height=640, corner_radius=6)
            frame.place(x = 70,y=40)

            img_book1 = ImageTk.PhotoImage(Image.open("new_images/Adv5.jfif"))
            def insert_newlines(text, width=70):
                # Wrap text to fit the specified width
                return '\n'.join(textwrap.wrap(text, width))

            booksdesc = {}

            # Open the CSV file and read the descriptions
            with open('desc.csv', mode='r', newline='', encoding='utf-8') as file:
                reader = csv.reader(file, delimiter=';')
                next(reader)  # Skip the header
                for row in reader:
                    book, description = row
                    # Wrap the description text to fit the frame width
                    booksdesc[book] = insert_newlines(description, width=70)
            label1 = Label(frame,image = img_book1, width=310, height=290)
            label1.pack()
            label1.place(x=60, y=25)
            
            desc_bk1=customtkinter.CTkLabel(frame, text="Description : ",font=('Times New Roman',25,'bold'))
            desc_bk1.place(x=25, y=335)
            
            desc_bk1 = ctk.CTkLabel(frame, text=booksdesc.get('book5', 'No description available'), font=('Times New Roman', 15, 'bold'))
            desc_bk1.place(x=25, y=375)
            
            frame2_bk1=customtkinter.CTkFrame(master = win_book1, width=790, height=440, corner_radius=6)
            frame2_bk1.place(x = 630,y=40)

            head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Enter your information",font=('Times New Roman',35,'bold'))
            head_bk1.place(x=230, y=15)
            name_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your username ')
            name_bk1.place(x=95, y=95)
            prenom_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your lastname')
            prenom_bk1.place(x=420, y=95)
            phone_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your phone')
            phone_bk1.place(x=95, y=155)
            city_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your city')
            city_bk1.place(x=420, y=155)
            default_text = "The abominable snowman"
            entry = customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your title')
            entry.insert(0, default_text)  # Insert default text at index 0
            entry.place(x=420, y=220)
            default_price = "5$"
            entry_price = customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your price')
            entry_price.insert(0, default_price)  # Insert default text at index 0
            entry_price.place(x=95, y=290)
            email_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your email')
            email_bk1.place(x=95, y=220)
            but_bk1 = customtkinter.CTkButton(frame2_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=Cntinue)
            but_bk1.place(x=420, y=290)
                    
            win_book1.state("zoomed")
            win_book1.mainloop()
            
#**************************************************** Book 6 *****************************************************************
        def book_6():
            win1.destroy()
            def card():
                def visa_ferify():
                    number = num_bk1.get().strip()
                    date = date_bk1.get().strip()
                    code = cod_bk1.get().strip()
                    adress = adress_bk1.get().strip()
                
                    if not number.isdigit():
                        messagebox.showerror("Error", "Please!!! write your correct number.") 
                    elif not date:
                        messagebox.showerror("Error", "Please!!! write your information.")
                    elif not code.isdigit():
                        messagebox.showerror("Error", "Please enter a valid code") 
                    elif not adress:
                        messagebox.showerror("Error", "Please!!! write your information.")                        
                    elif number and date and code and adress:
                        win_book1.destroy()
                        def Thank():
                            win = Tk()
                            def accuiel_page():
                                win.destroy()
                                class InvoiceWindow:
                                    def __init__(self, master, days_remaining):
                                        self.master = master
                                        self.days_remaining = days_remaining  # Initialize the number of days remaining
                                        self.create_invoice_window()

                                    def create_invoice_window(self):
                                        invoice_window = Toplevel(self.master)
                                        invoice_window.title("Invoice")
                                        invoice_window.geometry("500x400+445+320")
                                        invoice_window.resizable(False, False)  # Disable resizing


                                        canvas = Canvas(invoice_window, width=500, height=400, bg="white")
                                        canvas.pack()

                                        canvas.create_text(250, 30, text="Invoice", font=("Helvetica", 24, "bold"), fill="blue", anchor="center")
                                        canvas.create_line(50, 60, 450, 60, fill="blue")

                                        start_date = datetime.now()
                                        end_date = start_date + timedelta(days=15)
                                        with open('facture.csv', 'r', newline='') as file:
                                            reader = csv.reader(file)
                                            # Assuming the data in each row is ordered as Nam, Prén, Email, city, title, price
                                            for row in reader:
                                                Nam, Prén, Email, city, title, price = row
                                            
                                        details = [
                                            ("Username :", Nam),
                                            ("Lastname :", Prén),
                                            ("Book Title:", title),
                                            ("City :", city),
                                            ("Email :", Email),
                                            ("Price:", price),
                                            ("Start_Date:", start_date.strftime("%Y-%m-%d")),
                                            ("End_Date :", end_date.strftime("%Y-%m-%d")),
                                            # Add more details as needed
                                            # ("Remaining Days:", self.days_remaining)  # Display remaining days
                                        ]

                                        y_offset = 100
                                        for label, value in details:
                                            canvas.create_text(190, y_offset, text=label, anchor="e", font=("Helvetica", 12, "bold"), fill="blue")
                                            canvas.create_text(240, y_offset, text=value, anchor="w", font=("Helvetica", 12), fill="black")
                                            y_offset += 30

                                        total_day = canvas.create_text(150, 365, text=f"Total Day: {self.days_remaining} day", font=("Helvetica", 12, "bold")) 
                                            
                                        close_button = Button(invoice_window, text="Close", font=("Helvetica", 12), bg="red", fg="white", command=invoice_window.destroy)
                                        close_button.place(x=420, y=350)

                                    def update_days_remaining(self):
                                        self.days_remaining -= 1

                                class LibraryApp:
                                    def __init__(self, master):
                                        self.master = master
                                        self.days_remaining = self.calculate_remaining_days()  # Initialize the number of days remaining
                                        self.master.title("Library App")
                                        self.master.resizable(False, False)  # Disable resizing
                                        self.master.state("zoomed")
                                        self.create_main_window()

                                    def create_main_window(self):
                                        # Customize window background color
                                        self.master.configure(bg="lightgray")

                                        # Navigation Bar
                                        
                                        nav_frame = tk.Frame(self.master, bg="darkblue", height=60)
                                        nav_frame.pack(side="top", fill="x")

                                        title_label = Label(nav_frame, text="Library App", font=("Helvetica", 20), fg="white", bg="darkblue")
                                        title_label.pack(side="left", padx=20, pady=10)

                                        # Adjust button position
                                        img2=ImageTk.PhotoImage(Image.open("images/bg.jpg"))
                                        l1=customtkinter.CTkLabel(self.master,image=img2)
                                        l1.pack()
                                        book_button = Button(l1, text="Open Invoice", font=("Helvetica", 14), bg="blue", fg="white", command=self.open_book)
                                        book_button.place(relx=0.5, rely=0.3, anchor="center")

                                    def open_book(self):
                                        if self.days_remaining > 0:  # Check if there are remaining days
                                            self.days_remaining -= 1  # Decrement remaining days when opening an invoice
                                            InvoiceWindow(self.master, self.days_remaining)
                                        else:
                                            messagebox.showinfo("Information", "No more days left!")

                                    def calculate_remaining_days(self):
                                        current_date = datetime.now()
                                        start_date = current_date  # Set start date as current date
                                        remaining_days = (current_date - start_date).days
                                        return max(15 - remaining_days, 0)  # Ensure remaining days never go below 0

                                def main():
                                    win = tk.Tk()
                                    app = LibraryApp(win)
                                    win.mainloop()

                                if __name__ == "__main__":
                                    main()
                                

                            img2=ImageTk.PhotoImage(Image.open("images/BOOK.png"))
                            l1=customtkinter.CTkLabel(win,image=img2)
                            l1.pack()
                            thank = customtkinter.CTkLabel(win, text="Thank you for using our service!", text_color="white", bg_color="#171715", font=('Times New Roman',50,'bold'))
                            thank.pack()
                            thank.place(x=350,y=80)
                            but = customtkinter.CTkButton(win, text="continue", font=('Times New Roman',25,'bold'), text_color="white",height=40, bg_color="#232220", command=accuiel_page)

                            but.pack()
                            but.place(x=620, y=170)

                        
                            win.state("zoome")   
                            win.mainloop()
                            
                        Thank()
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter your card : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=30)
                
                num_bk1= customtkinter.CTkEntry(frame3_bk1, width=210, height=35, placeholder_text='Enter card number')
                num_bk1.place(x=255, y=25)
                
                date_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='mm/yy')
                date_bk1.place(x=515, y=25)
                
                cod_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter security card')
                cod_bk1.place(x=255, y=75)
                
                adress_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter your adress')
                adress_bk1.place(x=515, y=75)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=visa_ferify)
                buy_bk1.place(x= 355, y=140)
            
            def paypal():
                def payp():
                    email = email_pay_bk1.get().strip()
                    if not email:
                        messagebox.showerror("Error", "Please!!! write your information.") 
                    elif '@' not in email:
                        messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                    else:
                        win_book1.destroy()
                        def Thank():
                            win = Tk()
                            def accuiel_page():
                                win.destroy()
                                class InvoiceWindow:
                                    def __init__(self, master, days_remaining):
                                        self.master = master
                                        self.days_remaining = days_remaining  # Initialize the number of days remaining
                                        self.create_invoice_window()

                                    def create_invoice_window(self):
                                        invoice_window = Toplevel(self.master)
                                        invoice_window.title("Invoice")
                                        invoice_window.geometry("500x400+445+320")
                                        invoice_window.resizable(False, False)  # Disable resizing


                                        canvas = Canvas(invoice_window, width=500, height=400, bg="white")
                                        canvas.pack()

                                        canvas.create_text(250, 30, text="Invoice", font=("Helvetica", 24, "bold"), fill="blue", anchor="center")
                                        canvas.create_line(50, 60, 450, 60, fill="blue")

                                        start_date = datetime.now()
                                        end_date = start_date + timedelta(days=15)
                                        with open('facture.csv', 'r', newline='') as file:
                                            reader = csv.reader(file)
                                            # Assuming the data in each row is ordered as Nam, Prén, Email, city, title, price
                                            for row in reader:
                                                Nam, Prén, Email, city, title, price = row
                                            
                                        details = [
                                            ("Username :", Nam),
                                            ("Lastname :", Prén),
                                            ("Book Title:", title),
                                            ("City :", city),
                                            ("Email :", Email),
                                            ("Price:", price),
                                            ("Start_Date:", start_date.strftime("%Y-%m-%d")),
                                            ("End_Date :", end_date.strftime("%Y-%m-%d")),
                                            # Add more details as needed
                                            # ("Remaining Days:", self.days_remaining)  # Display remaining days
                                        ]

                                        y_offset = 100
                                        for label, value in details:
                                            canvas.create_text(190, y_offset, text=label, anchor="e", font=("Helvetica", 12, "bold"), fill="blue")
                                            canvas.create_text(240, y_offset, text=value, anchor="w", font=("Helvetica", 12), fill="black")
                                            y_offset += 30

                                        total_day = canvas.create_text(150, 365, text=f"Total Day: {self.days_remaining} day", font=("Helvetica", 12, "bold")) 
                                            
                                        close_button = Button(invoice_window, text="Close", font=("Helvetica", 12), bg="red", fg="white", command=invoice_window.destroy)
                                        close_button.place(x=420, y=350)

                                    def update_days_remaining(self):
                                        self.days_remaining -= 1

                                class LibraryApp:
                                    def __init__(self, master):
                                        self.master = master
                                        self.days_remaining = self.calculate_remaining_days()  # Initialize the number of days remaining
                                        self.master.title("Library App")
                                        self.master.resizable(False, False)  # Disable resizing
                                        self.master.state("zoomed")
                                        self.create_main_window()

                                    def create_main_window(self):
                                        # Customize window background color
                                        self.master.configure(bg="lightgray")

                                        # Navigation Bar
                                        
                                        nav_frame = tk.Frame(self.master, bg="darkblue", height=60)
                                        nav_frame.pack(side="top", fill="x")

                                        title_label = Label(nav_frame, text="Library App", font=("Helvetica", 20), fg="white", bg="darkblue")
                                        title_label.pack(side="left", padx=20, pady=10)

                                        # Adjust button position
                                        img2=ImageTk.PhotoImage(Image.open("images/bg.jpg"))
                                        l1=customtkinter.CTkLabel(self.master,image=img2)
                                        l1.pack()
                                        book_button = Button(l1, text="Open Invoice", font=("Helvetica", 14), bg="blue", fg="white", command=self.open_book)
                                        book_button.place(relx=0.5, rely=0.3, anchor="center")

                                    def open_book(self):
                                        if self.days_remaining > 0:  # Check if there are remaining days
                                            self.days_remaining -= 1  # Decrement remaining days when opening an invoice
                                            InvoiceWindow(self.master, self.days_remaining)
                                        else:
                                            messagebox.showinfo("Information", "No more days left!")

                                    def calculate_remaining_days(self):
                                        current_date = datetime.now()
                                        start_date = current_date  # Set start date as current date
                                        remaining_days = (current_date - start_date).days
                                        return max(15 - remaining_days, 0)  # Ensure remaining days never go below 0

                                def main():
                                    win = tk.Tk()
                                    app = LibraryApp(win)
                                    win.mainloop()

                                if __name__ == "__main__":
                                    main()
                                

                            img2=ImageTk.PhotoImage(Image.open("images/BOOK.png"))
                            l1=customtkinter.CTkLabel(win,image=img2)
                            l1.pack()
                            thank = customtkinter.CTkLabel(win, text="Thank you for using our service!", text_color="white", bg_color="#171715", font=('Times New Roman',50,'bold'))
                            thank.pack()
                            thank.place(x=350,y=80)
                            but = customtkinter.CTkButton(win, text="continue", font=('Times New Roman',25,'bold'), text_color="white",height=40, bg_color="#232220", command=accuiel_page)

                            but.pack()
                            but.place(x=620, y=170)
                        
                            win.state("zoome")   
                            win.mainloop()
                            
                        Thank()
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter email from paypal : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=45)
                
                email_pay_bk1= customtkinter.CTkEntry(frame3_bk1, width=290, height=35, placeholder_text='Enter your email')
                email_pay_bk1.place(x=320, y=45)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=175, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=payp)
                buy_bk1.place(x= 315, y=115)
            
            def Cntinue():
                name = name_bk1.get().strip()
                prénom = prenom_bk1.get().strip()     
                phone = phone_bk1.get().strip()
                city = city_bk1.get().strip()
                email = email_bk1.get().strip()
                title = entry.get().strip()
                price = entry_price.get().strip()
                
                if not name:
                    messagebox.showerror("Error", "Please!!! write your information.") 
                elif not prénom:
                    messagebox.showerror("Error", "Please!!! write your information.")
                
                elif not phone.isdigit():
                    messagebox.showerror("Error", "Please enter a valid number") 
                elif not city:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif not email:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif '@' not in email:
                    messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                else:
                    with open("facture.csv", "a", newline='') as file:
                        writer = csv.writer(file)
                        writer.writerow([name, prénom, email, city, title, price])
                    head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Choose your payment : ",font=('Times New Roman',20,'bold'))
                    head_bk1.place(x=85, y=350)
                    
                    img_visa = ImageTk.PhotoImage(Image.open("images/visa.jfif"))
                    but_visa = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_visa,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_visa.place(x=380, y=370)
                
                    img_masterCard = ImageTk.PhotoImage(Image.open("images/mastercard.jfif"))
                    but_masterCard = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_masterCard,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_masterCard.place(x=510, y=370)
                    
                    img_paypal = ImageTk.PhotoImage(Image.open("images/paypal.jfif"))
                    but_paypal = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_paypal,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=paypal)
                    but_paypal.place(x=640, y=370)
                
            win_book1 = Tk()

            img2=ImageTk.PhotoImage(Image.open("images/pattern.png"))
            l1=customtkinter.CTkLabel(win_book1,image=img2)
            l1.pack()
        
            frame=customtkinter.CTkFrame(master = win_book1, width=500, height=640, corner_radius=6)
            frame.place(x = 70,y=40)

            img_book1 = ImageTk.PhotoImage(Image.open("new_images/adv7.jfif"))
            def insert_newlines(text, width=70):
                # Wrap text to fit the specified width
                return '\n'.join(textwrap.wrap(text, width))

            booksdesc = {}

            # Open the CSV file and read the descriptions
            with open('desc.csv', mode='r', newline='', encoding='utf-8') as file:
                reader = csv.reader(file, delimiter=';')
                next(reader)  # Skip the header
                for row in reader:
                    book, description = row
                    # Wrap the description text to fit the frame width
                    booksdesc[book] = insert_newlines(description, width=70)
            label1 = Label(frame,image = img_book1, width=310, height=290)
            label1.pack()
            label1.place(x=60, y=25)
            
            desc_bk1=customtkinter.CTkLabel(frame, text="Description : ",font=('Times New Roman',25,'bold'))
            desc_bk1.place(x=25, y=335)
            
            desc_bk1 = ctk.CTkLabel(frame, text=booksdesc.get('book6', 'No description available'), font=('Times New Roman', 15, 'bold'))
            desc_bk1.place(x=25, y=375)
            
            frame2_bk1=customtkinter.CTkFrame(master = win_book1, width=790, height=440, corner_radius=6)
            frame2_bk1.place(x = 630,y=40)

            head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Enter your information",font=('Times New Roman',35,'bold'))
            head_bk1.place(x=230, y=15)
            name_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your username ')
            name_bk1.place(x=95, y=95)
            prenom_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your lastname')
            prenom_bk1.place(x=420, y=95)
            phone_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your phone')
            phone_bk1.place(x=95, y=155)
            city_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your city')
            city_bk1.place(x=420, y=155)
            default_text = "Narnia"
            entry = customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your title')
            entry.insert(0, default_text)  # Insert default text at index 0
            entry.place(x=420, y=220)
            default_price = "20$"
            entry_price = customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your price')
            entry_price.insert(0, default_price)  # Insert default text at index 0
            entry_price.place(x=95, y=290)
            email_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your email')
            email_bk1.place(x=95, y=220)
            
            but_bk1 = customtkinter.CTkButton(frame2_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=Cntinue)
            but_bk1.place(x=420, y=290)
                    
            win_book1.state("zoomed")
            win_book1.mainloop()
#**************************************************** Book 7 *******************************************************************            
        def book_7():
            win1.destroy()
            def card():
                def visa_ferify():
                    number = num_bk1.get().strip()
                    date = date_bk1.get().strip()
                    code = cod_bk1.get().strip()
                    adress = adress_bk1.get().strip()
                
                    if not number.isdigit():
                        messagebox.showerror("Error", "Please!!! write your correct number.") 
                    elif not date:
                        messagebox.showerror("Error", "Please!!! write your information.")
                    elif not code.isdigit():
                        messagebox.showerror("Error", "Please enter a valid code") 
                    elif not adress:
                        messagebox.showerror("Error", "Please!!! write your information.")                        
                    elif number and date and code and adress:
                        win_book1.destroy()
                        from thankYou_page import Thank
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter your card : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=30)
                
                num_bk1= customtkinter.CTkEntry(frame3_bk1, width=210, height=35, placeholder_text='Enter card number')
                num_bk1.place(x=255, y=25)
                
                date_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='mm/yy')
                date_bk1.place(x=515, y=25)
                
                cod_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter security card')
                cod_bk1.place(x=255, y=75)
                
                adress_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter your adress')
                adress_bk1.place(x=515, y=75)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=visa_ferify)
                buy_bk1.place(x= 355, y=140)
            
            def paypal():
                def payp():
                    email = email_pay_bk1.get().strip()
                    if not email:
                        messagebox.showerror("Error", "Please!!! write your information.") 
                    elif '@' not in email:
                        messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                    else:
                        win_book1.destroy()
                        from thankYou_page import Thank
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter email from paypal : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=45)
                
                email_pay_bk1= customtkinter.CTkEntry(frame3_bk1, width=290, height=35, placeholder_text='Enter your email')
                email_pay_bk1.place(x=320, y=45)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=175, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=payp)
                buy_bk1.place(x= 315, y=115)
            
            def Cntinue():
                name = name_bk1.get().strip()
                prénom = prenom_bk1.get().strip()     
                phone = phone_bk1.get().strip()
                city = city_bk1.get().strip()
                email = email_bk1.get().strip()
                
                if not name:
                    messagebox.showerror("Error", "Please!!! write your information.") 
                elif not prénom:
                    messagebox.showerror("Error", "Please!!! write your information.")
                
                elif not phone.isdigit():
                    messagebox.showerror("Error", "Please enter a valid number") 
                elif not city:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif not email:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif '@' not in email:
                    messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                else:
                    head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Choose your payment : ",font=('Times New Roman',20,'bold'))
                    head_bk1.place(x=85, y=350)
                    
                    img_visa = ImageTk.PhotoImage(Image.open("images/visa.jfif"))
                    but_visa = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_visa,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_visa.place(x=380, y=370)
                    
                    img_masterCard = ImageTk.PhotoImage(Image.open("images/mastercard.jfif"))
                    but_masterCard = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_masterCard,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_masterCard.place(x=510, y=370)
                    
                    img_paypal = ImageTk.PhotoImage(Image.open("images/paypal.jfif"))
                    but_paypal = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_paypal,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=paypal)
                    but_paypal.place(x=640, y=370)
                
            win_book1 = Tk()

            img2=ImageTk.PhotoImage(Image.open("images/pattern.png"))
            l1=customtkinter.CTkLabel(win_book1,image=img2)
            l1.pack()
        
            frame=customtkinter.CTkFrame(master = win_book1, width=500, height=640, corner_radius=6)
            frame.place(x = 70,y=40)

            img_book1 = ImageTk.PhotoImage(Image.open("new_images/img-17.jfif"))
            def insert_newlines(text, width=70):
                # Wrap text to fit the specified width
                return '\n'.join(textwrap.wrap(text, width))

            booksdesc = {}

            # Open the CSV file and read the descriptions
            with open('desc.csv', mode='r', newline='', encoding='utf-8') as file:
                reader = csv.reader(file, delimiter=';')
                next(reader)  # Skip the header
                for row in reader:
                    book, description = row
                    # Wrap the description text to fit the frame width
                    booksdesc[book] = insert_newlines(description, width=70)
            label1 = Label(frame,image = img_book1, width=310, height=290)
            label1.pack()
            label1.place(x=60, y=25)
            
            desc_bk1=customtkinter.CTkLabel(frame, text="Description : ",font=('Times New Roman',25,'bold'))
            desc_bk1.place(x=25, y=335)
            
            desc_bk1 = ctk.CTkLabel(frame, text=booksdesc.get('book7', 'No description available'), font=('Times New Roman', 15, 'bold'))
            desc_bk1.place(x=25, y=375)
            
            frame2_bk1=customtkinter.CTkFrame(master = win_book1, width=790, height=440, corner_radius=6)
            frame2_bk1.place(x = 630,y=40)

            head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Enter your information",font=('Times New Roman',35,'bold'))
            head_bk1.place(x=230, y=15)
            name_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your username ')
            name_bk1.place(x=95, y=95)
            prenom_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your lastname')
            prenom_bk1.place(x=420, y=95)
            phone_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your phone')
            phone_bk1.place(x=95, y=155)
            city_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your city')
            city_bk1.place(x=420, y=155)
            email_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your email')
            email_bk1.place(x=95, y=220)
            but_bk1 = customtkinter.CTkButton(frame2_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=Cntinue)
            but_bk1.place(x=305, y=290)
                    
            win_book1.state("zoomed")
            win_book1.mainloop()
            
#****************************************************** Book 8 ************************************************************
        def book_8():
            win1.destroy()
            def card():
                def visa_ferify():
                    number = num_bk1.get().strip()
                    date = date_bk1.get().strip()
                    code = cod_bk1.get().strip()
                    adress = adress_bk1.get().strip()
                
                    if not number.isdigit():
                        messagebox.showerror("Error", "Please!!! write your correct number.") 
                    elif not date:
                        messagebox.showerror("Error", "Please!!! write your information.")
                    elif not code.isdigit():
                        messagebox.showerror("Error", "Please enter a valid code") 
                    elif not adress:
                        messagebox.showerror("Error", "Please!!! write your information.")                        
                    elif number and date and code and adress:
                        win_book1.destroy()
                        from thankYou_page import Thank
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter your card : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=30)
                
                num_bk1= customtkinter.CTkEntry(frame3_bk1, width=210, height=35, placeholder_text='Enter card number')
                num_bk1.place(x=255, y=25)
                
                date_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='mm/yy')
                date_bk1.place(x=515, y=25)
                
                cod_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter security card')
                cod_bk1.place(x=255, y=75)
                
                adress_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter your adress')
                adress_bk1.place(x=515, y=75)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=visa_ferify)
                buy_bk1.place(x= 355, y=140)
            
            def paypal():
                def payp():
                    email = email_pay_bk1.get().strip()
                    if not email:
                        messagebox.showerror("Error", "Please!!! write your information.") 
                    elif '@' not in email:
                        messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                    else:
                        win_book1.destroy()
                        from thankYou_page import Thank
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter email from paypal : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=45)
                
                email_pay_bk1= customtkinter.CTkEntry(frame3_bk1, width=290, height=35, placeholder_text='Enter your email')
                email_pay_bk1.place(x=320, y=45)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=175, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=payp)
                buy_bk1.place(x= 315, y=115)
            
            def Cntinue():
                name = name_bk1.get().strip()
                prénom = prenom_bk1.get().strip()     
                phone = phone_bk1.get().strip()
                city = city_bk1.get().strip()
                email = email_bk1.get().strip()
                
                if not name:
                    messagebox.showerror("Error", "Please!!! write your information.") 
                elif not prénom:
                    messagebox.showerror("Error", "Please!!! write your information.")
                
                elif not phone.isdigit():
                    messagebox.showerror("Error", "Please enter a valid number") 
                elif not city:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif not email:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif '@' not in email:
                    messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                else:
                    head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Choose your payment : ",font=('Times New Roman',20,'bold'))
                    head_bk1.place(x=85, y=350)
                    
                    img_visa = ImageTk.PhotoImage(Image.open("images/visa.jfif"))
                    but_visa = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_visa,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_visa.place(x=380, y=370)
                    
                    img_masterCard = ImageTk.PhotoImage(Image.open("images/mastercard.jfif"))
                    but_masterCard = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_masterCard,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_masterCard.place(x=510, y=370)
                    
                    img_paypal = ImageTk.PhotoImage(Image.open("images/paypal.jfif"))
                    but_paypal = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_paypal,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=paypal)
                    but_paypal.place(x=640, y=370)
                
            win_book1 = Tk()

            img2=ImageTk.PhotoImage(Image.open("images/pattern.png"))
            l1=customtkinter.CTkLabel(win_book1,image=img2)
            l1.pack()
        
            frame=customtkinter.CTkFrame(master = win_book1, width=500, height=640, corner_radius=6)
            frame.place(x = 70,y=40)

            img_book1 = ImageTk.PhotoImage(Image.open("new_images/adv8.jfif"))
            def insert_newlines(text, width=70):
                # Wrap text to fit the specified width
                return '\n'.join(textwrap.wrap(text, width))

            booksdesc = {}

            # Open the CSV file and read the descriptions
            with open('desc.csv', mode='r', newline='', encoding='utf-8') as file:
                reader = csv.reader(file, delimiter=';')
                next(reader)  # Skip the header
                for row in reader:
                    book, description = row
                    # Wrap the description text to fit the frame width
                    booksdesc[book] = insert_newlines(description, width=70)
            label1 = Label(frame,image = img_book1, width=310, height=290)
            label1.pack()
            label1.place(x=60, y=25)
            
            desc_bk1=customtkinter.CTkLabel(frame, text="Description : ",font=('Times New Roman',25,'bold'))
            desc_bk1.place(x=25, y=335)
            
            desc_bk1 = ctk.CTkLabel(frame, text=booksdesc.get('book8', 'No description available'), font=('Times New Roman', 15, 'bold'))
            desc_bk1.place(x=25, y=375)
            
            frame2_bk1=customtkinter.CTkFrame(master = win_book1, width=790, height=440, corner_radius=6)
            frame2_bk1.place(x = 630,y=40)

            head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Enter your information",font=('Times New Roman',35,'bold'))
            head_bk1.place(x=230, y=15)
            name_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your username ')
            name_bk1.place(x=95, y=95)
            prenom_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your lastname')
            prenom_bk1.place(x=420, y=95)
            phone_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your phone')
            phone_bk1.place(x=95, y=155)
            city_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your city')
            city_bk1.place(x=420, y=155)
            email_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your email')
            email_bk1.place(x=95, y=220)
            but_bk1 = customtkinter.CTkButton(frame2_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=Cntinue)
            but_bk1.place(x=305, y=290)
                    
            win_book1.state("zoomed")
            win_book1.mainloop()
            
#****************************************************** Book 9 ************************************************************
        def book_9():
            win1.destroy()
            def card():
                def visa_ferify():
                    number = num_bk1.get().strip()
                    date = date_bk1.get().strip()
                    code = cod_bk1.get().strip()
                    adress = adress_bk1.get().strip()
                
                    if not number.isdigit():
                        messagebox.showerror("Error", "Please!!! write your correct number.") 
                    elif not date:
                        messagebox.showerror("Error", "Please!!! write your information.")
                    elif not code.isdigit():
                        messagebox.showerror("Error", "Please enter a valid code") 
                    elif not adress:
                        messagebox.showerror("Error", "Please!!! write your information.")                        
                    elif number and date and code and adress:
                        win_book1.destroy()
                        from thankYou_page import Thank
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
            
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter your card : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=30)
            
                num_bk1= customtkinter.CTkEntry(frame3_bk1, width=210, height=35, placeholder_text='Enter card number')
                num_bk1.place(x=255, y=25)
            
                date_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='mm/yy')
                date_bk1.place(x=515, y=25)
            
                cod_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter security card')
                cod_bk1.place(x=255, y=75)
            
                adress_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter your adress')
                adress_bk1.place(x=515, y=75)
            
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=visa_ferify)
                buy_bk1.place(x= 355, y=140)
        
            def paypal():
                def payp():
                    email = email_pay_bk1.get().strip()
                    if not email:
                        messagebox.showerror("Error", "Please!!! write your information.") 
                    elif '@' not in email:
                        messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                    else:
                        win_book1.destroy()
                        from thankYou_page import Thank
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
            
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter email from paypal : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=45)
            
                email_pay_bk1= customtkinter.CTkEntry(frame3_bk1, width=290, height=35, placeholder_text='Enter your email')
                email_pay_bk1.place(x=320, y=45)
            
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=175, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=payp)
                buy_bk1.place(x= 315, y=115)
        
            def Cntinue():
                name = name_bk1.get().strip()
                prénom = prenom_bk1.get().strip()     
                phone = phone_bk1.get().strip()
                city = city_bk1.get().strip()
                email = email_bk1.get().strip()
                
                if not name:
                    messagebox.showerror("Error", "Please!!! write your information.") 
                elif not prénom:
                    messagebox.showerror("Error", "Please!!! write your information.")
                
                elif not phone.isdigit():
                    messagebox.showerror("Error", "Please enter a valid number") 
                elif not city:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif not email:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif '@' not in email:
                    messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                else:
                    head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Choose your payment : ",font=('Times New Roman',20,'bold'))
                    head_bk1.place(x=85, y=350)
                
                    img_visa = ImageTk.PhotoImage(Image.open("images/visa.jfif"))
                    but_visa = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_visa,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_visa.place(x=380, y=370)
                
                    img_masterCard = ImageTk.PhotoImage(Image.open("images/mastercard.jfif"))
                    but_masterCard = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_masterCard,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_masterCard.place(x=510, y=370)
                
                    img_paypal = ImageTk.PhotoImage(Image.open("images/paypal.jfif"))
                    but_paypal = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_paypal,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=paypal)
                    but_paypal.place(x=640, y=370)
            
            win_book1 = Tk()

            img2=ImageTk.PhotoImage(Image.open("images/pattern.png"))
            l1=customtkinter.CTkLabel(win_book1,image=img2)
            l1.pack()

            frame=customtkinter.CTkFrame(master = win_book1, width=500, height=640, corner_radius=6)
            frame.place(x = 70,y=40)

            img_book1 = ImageTk.PhotoImage(Image.open("new_images/img-9.jfif"))
            def insert_newlines(text, width=70):
                # Wrap text to fit the specified width
                return '\n'.join(textwrap.wrap(text, width))

            booksdesc = {}

            # Open the CSV file and read the descriptions
            with open('desc.csv', mode='r', newline='', encoding='utf-8') as file:
                reader = csv.reader(file, delimiter=';')
                next(reader)  # Skip the header
                for row in reader:
                    book, description = row
                    # Wrap the description text to fit the frame width
                    booksdesc[book] = insert_newlines(description, width=70)
            label1 = Label(frame,image = img_book1, width=310, height=290)
            label1.pack()
            label1.place(x=60, y=25)
        
            desc_bk1=customtkinter.CTkLabel(frame, text="Description : ",font=('Times New Roman',25,'bold'))
            desc_bk1.place(x=25, y=335)
        
            desc_bk1 = ctk.CTkLabel(frame, text=booksdesc.get('book9', 'No description available'), font=('Times New Roman', 15, 'bold'))
            desc_bk1.place(x=25, y=375)
        
            frame2_bk1=customtkinter.CTkFrame(master = win_book1, width=790, height=440, corner_radius=6)
            frame2_bk1.place(x = 630,y=40)

            head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Enter your information",font=('Times New Roman',35,'bold'))
            head_bk1.place(x=230, y=15)
            name_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your username ')
            name_bk1.place(x=95, y=95)
            prenom_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your lastname')
            prenom_bk1.place(x=420, y=95)
            phone_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your phone')
            phone_bk1.place(x=95, y=155)
            city_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your city')
            city_bk1.place(x=420, y=155)
            email_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your email')
            email_bk1.place(x=95, y=220)
            but_bk1 = customtkinter.CTkButton(frame2_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=Cntinue)
            but_bk1.place(x=305, y=290)
                
            win_book1.state("zoomed")
            win_book1.mainloop()
            
#****************************************************** Book 10 ***********************************************************
        def book_10():
            win1.destroy()
            def card():
                def visa_ferify():
                    number = num_bk1.get().strip()
                    date = date_bk1.get().strip()
                    code = cod_bk1.get().strip()
                    adress = adress_bk1.get().strip()
                
                    if not number.isdigit():
                        messagebox.showerror("Error", "Please!!! write your correct number.") 
                    elif not date:
                        messagebox.showerror("Error", "Please!!! write your information.")
                    elif not code.isdigit():
                        messagebox.showerror("Error", "Please enter a valid code") 
                    elif not adress:
                        messagebox.showerror("Error", "Please!!! write your information.")                        
                    elif number and date and code and adress:
                        win_book1.destroy()
                        from thankYou_page import Thank
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter your card : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=30)
                
                num_bk1= customtkinter.CTkEntry(frame3_bk1, width=210, height=35, placeholder_text='Enter card number')
                num_bk1.place(x=255, y=25)
                
                date_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='mm/yy')
                date_bk1.place(x=515, y=25)
                
                cod_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter security card')
                cod_bk1.place(x=255, y=75)
                
                adress_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter your adress')
                adress_bk1.place(x=515, y=75)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=visa_ferify)
                buy_bk1.place(x= 355, y=140)
            
            def paypal():
                def payp():
                    email = email_pay_bk1.get().strip()
                    if not email:
                        messagebox.showerror("Error", "Please!!! write your information.") 
                    elif '@' not in email:
                        messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                    else:
                        win_book1.destroy()
                        from thankYou_page import Thank
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter email from paypal : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=45)
                
                email_pay_bk1= customtkinter.CTkEntry(frame3_bk1, width=290, height=35, placeholder_text='Enter your email')
                email_pay_bk1.place(x=320, y=45)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=175, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=payp)
                buy_bk1.place(x= 315, y=115)
            
            def Cntinue():
                name = name_bk1.get().strip()
                prénom = prenom_bk1.get().strip()     
                phone = phone_bk1.get().strip()
                city = city_bk1.get().strip()
                email = email_bk1.get().strip()
                
                if not name:
                    messagebox.showerror("Error", "Please!!! write your information.") 
                elif not prénom:
                    messagebox.showerror("Error", "Please!!! write your information.")
                
                elif not phone.isdigit():
                    messagebox.showerror("Error", "Please enter a valid number") 
                elif not city:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif not email:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif '@' not in email:
                    messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                else:
                    head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Choose your payment : ",font=('Times New Roman',20,'bold'))
                    head_bk1.place(x=85, y=350)
                    
                    img_visa = ImageTk.PhotoImage(Image.open("images/visa.jfif"))
                    but_visa = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_visa,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_visa.place(x=380, y=370)
                    
                    img_masterCard = ImageTk.PhotoImage(Image.open("images/mastercard.jfif"))
                    but_masterCard = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_masterCard,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_masterCard.place(x=510, y=370)
                    
                    img_paypal = ImageTk.PhotoImage(Image.open("images/paypal.jfif"))
                    but_paypal = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_paypal,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=paypal)
                    but_paypal.place(x=640, y=370)
                
            win_book1 = Tk()

            img2=ImageTk.PhotoImage(Image.open("images/pattern.png"))
            l1=customtkinter.CTkLabel(win_book1,image=img2)
            l1.pack()
        
            frame=customtkinter.CTkFrame(master = win_book1, width=500, height=640, corner_radius=6)
            frame.place(x = 70,y=40)

            img_book1 = ImageTk.PhotoImage(Image.open("new_images/c2.jfif"))
            def insert_newlines(text, width=70):
                # Wrap text to fit the specified width
                return '\n'.join(textwrap.wrap(text, width))

            booksdesc = {}

            # Open the CSV file and read the descriptions
            with open('desc.csv', mode='r', newline='', encoding='utf-8') as file:
                reader = csv.reader(file, delimiter=';')
                next(reader)  # Skip the header
                for row in reader:
                    book, description = row
                    # Wrap the description text to fit the frame width
                    booksdesc[book] = insert_newlines(description, width=70)
            label1 = Label(frame,image = img_book1, width=310, height=290)
            label1.pack()
            label1.place(x=60, y=25)
            
            desc_bk1=customtkinter.CTkLabel(frame, text="Description : ",font=('Times New Roman',25,'bold'))
            desc_bk1.place(x=25, y=335)
            
            desc_bk1 = ctk.CTkLabel(frame, text=booksdesc.get('book10', 'No description available'), font=('Times New Roman', 15, 'bold'))
            desc_bk1.place(x=25, y=375)
            
            frame2_bk1=customtkinter.CTkFrame(master = win_book1, width=790, height=440, corner_radius=6)
            frame2_bk1.place(x = 630,y=40)

            head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Enter your information",font=('Times New Roman',35,'bold'))
            head_bk1.place(x=230, y=15)
            name_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your username ')
            name_bk1.place(x=95, y=95)
            prenom_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your lastname')
            prenom_bk1.place(x=420, y=95)
            phone_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your phone')
            phone_bk1.place(x=95, y=155)
            city_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your city')
            city_bk1.place(x=420, y=155)
            email_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your email')
            email_bk1.place(x=95, y=220)
            but_bk1 = customtkinter.CTkButton(frame2_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=Cntinue)
            but_bk1.place(x=305, y=290)
                    
            win_book1.state("zoomed")
            win_book1.mainloop()
            
#***************************************************** Book 11 **************************************************************
        def book_11():
            win1.destroy()
            def card():
                def visa_ferify():
                    number = num_bk1.get().strip()
                    date = date_bk1.get().strip()
                    code = cod_bk1.get().strip()
                    adress = adress_bk1.get().strip()
                
                    if not number.isdigit():
                        messagebox.showerror("Error", "Please!!! write your correct number.") 
                    elif not date:
                        messagebox.showerror("Error", "Please!!! write your information.")
                    elif not code.isdigit():
                        messagebox.showerror("Error", "Please enter a valid code") 
                    elif not adress:
                        messagebox.showerror("Error", "Please!!! write your information.")                        
                    elif number and date and code and adress:
                        win_book1.destroy()
                        from thankYou_page import Thank
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter your card : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=30)
                
                num_bk1= customtkinter.CTkEntry(frame3_bk1, width=210, height=35, placeholder_text='Enter card number')
                num_bk1.place(x=255, y=25)
                
                date_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='mm/yy')
                date_bk1.place(x=515, y=25)
                
                cod_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter security card')
                cod_bk1.place(x=255, y=75)
                
                adress_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter your adress')
                adress_bk1.place(x=515, y=75)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=visa_ferify)
                buy_bk1.place(x= 355, y=140)
            
            def paypal():
                def payp():
                    email = email_pay_bk1.get().strip()
                    if not email:
                        messagebox.showerror("Error", "Please!!! write your information.") 
                    elif '@' not in email:
                        messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                    else:
                        win_book1.destroy()
                        from thankYou_page import Thank
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter email from paypal : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=45)
                
                email_pay_bk1= customtkinter.CTkEntry(frame3_bk1, width=290, height=35, placeholder_text='Enter your email')
                email_pay_bk1.place(x=320, y=45)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=175, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=payp)
                buy_bk1.place(x= 315, y=115)
            
            def Cntinue():
                name = name_bk1.get().strip()
                prénom = prenom_bk1.get().strip()     
                phone = phone_bk1.get().strip()
                city = city_bk1.get().strip()
                email = email_bk1.get().strip()
                
                if not name:
                    messagebox.showerror("Error", "Please!!! write your information.") 
                elif not prénom:
                    messagebox.showerror("Error", "Please!!! write your information.")
                
                elif not phone.isdigit():
                    messagebox.showerror("Error", "Please enter a valid number") 
                elif not city:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif not email:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif '@' not in email:
                    messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                else:
                    head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Choose your payment : ",font=('Times New Roman',20,'bold'))
                    head_bk1.place(x=85, y=350)
                    
                    img_visa = ImageTk.PhotoImage(Image.open("images/visa.jfif"))
                    but_visa = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_visa,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_visa.place(x=380, y=370)
                    
                    img_masterCard = ImageTk.PhotoImage(Image.open("images/mastercard.jfif"))
                    but_masterCard = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_masterCard,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_masterCard.place(x=510, y=370)
                    
                    img_paypal = ImageTk.PhotoImage(Image.open("images/paypal.jfif"))
                    but_paypal = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_paypal,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=paypal)
                    but_paypal.place(x=640, y=370)
                
            win_book1 = Tk()

            img2=ImageTk.PhotoImage(Image.open("images/pattern.png"))
            l1=customtkinter.CTkLabel(win_book1,image=img2)
            l1.pack()
        
            frame=customtkinter.CTkFrame(master = win_book1, width=500, height=640, corner_radius=6)
            frame.place(x = 70,y=40)

            img_book1 = ImageTk.PhotoImage(Image.open("new_images/c3.jfif"))
            def insert_newlines(text, width=70):
                # Wrap text to fit the specified width
                return '\n'.join(textwrap.wrap(text, width))

            booksdesc = {}

            # Open the CSV file and read the descriptions
            with open('desc.csv', mode='r', newline='', encoding='utf-8') as file:
                reader = csv.reader(file, delimiter=';')
                next(reader)  # Skip the header
                for row in reader:
                    book, description = row
                    # Wrap the description text to fit the frame width
                    booksdesc[book] = insert_newlines(description, width=70)
            label1 = Label(frame,image = img_book1, width=310, height=290)
            label1.pack()
            label1.place(x=60, y=25)
            
            desc_bk1=customtkinter.CTkLabel(frame, text="Description : ",font=('Times New Roman',25,'bold'))
            desc_bk1.place(x=25, y=335)
            
            desc_bk1 = ctk.CTkLabel(frame, text=booksdesc.get('book11', 'No description available'), font=('Times New Roman', 15, 'bold'))
            desc_bk1.place(x=25, y=375)
            
            frame2_bk1=customtkinter.CTkFrame(master = win_book1, width=790, height=440, corner_radius=6)
            frame2_bk1.place(x = 630,y=40)

            head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Enter your information",font=('Times New Roman',35,'bold'))
            head_bk1.place(x=230, y=15)
            name_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your username ')
            name_bk1.place(x=95, y=95)
            prenom_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your lastname')
            prenom_bk1.place(x=420, y=95)
            phone_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your phone')
            phone_bk1.place(x=95, y=155)
            city_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your city')
            city_bk1.place(x=420, y=155)
            email_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your email')
            email_bk1.place(x=95, y=220)
            but_bk1 = customtkinter.CTkButton(frame2_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=Cntinue)
            but_bk1.place(x=305, y=290)
                    
            win_book1.state("zoomed")
            win_book1.mainloop()
            
#****************************************************** Book 12 **********************************************************
        def book_12():
            win1.destroy()
            def card():
                def visa_ferify():
                    number = num_bk1.get().strip()
                    date = date_bk1.get().strip()
                    code = cod_bk1.get().strip()
                    adress = adress_bk1.get().strip()
                
                    if not number.isdigit():
                        messagebox.showerror("Error", "Please!!! write your correct number.") 
                    elif not date:
                        messagebox.showerror("Error", "Please!!! write your information.")
                    elif not code.isdigit():
                        messagebox.showerror("Error", "Please enter a valid code") 
                    elif not adress:
                        messagebox.showerror("Error", "Please!!! write your information.")                        
                    elif number and date and code and adress:
                        win_book1.destroy()
                        from thankYou_page import Thank
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter your card : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=30)
                
                num_bk1= customtkinter.CTkEntry(frame3_bk1, width=210, height=35, placeholder_text='Enter card number')
                num_bk1.place(x=255, y=25)
                
                date_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='mm/yy')
                date_bk1.place(x=515, y=25)
                
                cod_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter security card')
                cod_bk1.place(x=255, y=75)
                
                adress_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter your adress')
                adress_bk1.place(x=515, y=75)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=visa_ferify)
                buy_bk1.place(x= 355, y=140)
            
            def paypal():
                def payp():
                    email = email_pay_bk1.get().strip()
                    if not email:
                        messagebox.showerror("Error", "Please!!! write your information.") 
                    elif '@' not in email:
                        messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                    else:
                        win_book1.destroy()
                        from thankYou_page import Thank
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter email from paypal : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=45)
                
                email_pay_bk1= customtkinter.CTkEntry(frame3_bk1, width=290, height=35, placeholder_text='Enter your email')
                email_pay_bk1.place(x=320, y=45)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=175, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=payp)
                buy_bk1.place(x= 315, y=115)
            
            def Cntinue():
                name = name_bk1.get().strip()
                prénom = prenom_bk1.get().strip()     
                phone = phone_bk1.get().strip()
                city = city_bk1.get().strip()
                email = email_bk1.get().strip()
                
                if not name:
                    messagebox.showerror("Error", "Please!!! write your information.") 
                elif not prénom:
                    messagebox.showerror("Error", "Please!!! write your information.")
                
                elif not phone.isdigit():
                    messagebox.showerror("Error", "Please enter a valid number") 
                elif not city:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif not email:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif '@' not in email:
                    messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                else:
                    head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Choose your payment : ",font=('Times New Roman',20,'bold'))
                    head_bk1.place(x=85, y=350)
                    
                    img_visa = ImageTk.PhotoImage(Image.open("images/visa.jfif"))
                    but_visa = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_visa,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_visa.place(x=380, y=370)
                    
                    img_masterCard = ImageTk.PhotoImage(Image.open("images/mastercard.jfif"))
                    but_masterCard = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_masterCard,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_masterCard.place(x=510, y=370)
                    
                    img_paypal = ImageTk.PhotoImage(Image.open("images/paypal.jfif"))
                    but_paypal = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_paypal,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=paypal)
                    but_paypal.place(x=640, y=370)
                
            win_book1 = Tk()

            img2=ImageTk.PhotoImage(Image.open("images/pattern.png"))
            l1=customtkinter.CTkLabel(win_book1,image=img2)
            l1.pack()
        
            frame=customtkinter.CTkFrame(master = win_book1, width=500, height=640, corner_radius=6)
            frame.place(x = 70,y=40)

            img_book1 = ImageTk.PhotoImage(Image.open("new_images/c4.jfif"))
            def insert_newlines(text, width=70):
                # Wrap text to fit the specified width
                return '\n'.join(textwrap.wrap(text, width))

            booksdesc = {}

            # Open the CSV file and read the descriptions
            with open('desc.csv', mode='r', newline='', encoding='utf-8') as file:
                reader = csv.reader(file, delimiter=';')
                next(reader)  # Skip the header
                for row in reader:
                    book, description = row
                    # Wrap the description text to fit the frame width
                    booksdesc[book] = insert_newlines(description, width=70)
            label1 = Label(frame,image = img_book1, width=310, height=290)
            label1.pack()
            label1.place(x=60, y=25)
            
            desc_bk1=customtkinter.CTkLabel(frame, text="Description : ",font=('Times New Roman',25,'bold'))
            desc_bk1.place(x=25, y=335)
            
            desc_bk1=customtkinter.CTkLabel(frame, text=".",font=('Times New Roman',15,'bold'))
            desc_bk1.place(x=25, y=375)
            
            frame2_bk1=customtkinter.CTkFrame(master = win_book1, width=790, height=440, corner_radius=6)
            frame2_bk1.place(x = 630,y=40)

            head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Enter your information",font=('Times New Roman',35,'bold'))
            head_bk1.place(x=230, y=15)
            name_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your username ')
            name_bk1.place(x=95, y=95)
            prenom_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your lastname')
            prenom_bk1.place(x=420, y=95)
            phone_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your phone')
            phone_bk1.place(x=95, y=155)
            city_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your city')
            city_bk1.place(x=420, y=155)
            email_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your email')
            email_bk1.place(x=95, y=220)
            but_bk1 = customtkinter.CTkButton(frame2_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=Cntinue)
            but_bk1.place(x=305, y=290)
                    
            win_book1.state("zoomed")
            win_book1.mainloop()
            
#***************************************************** Book 13 *************************************************************
        def book_13():
            win1.destroy()
            def card():
                def visa_ferify():
                    number = num_bk1.get().strip()
                    date = date_bk1.get().strip()
                    code = cod_bk1.get().strip()
                    adress = adress_bk1.get().strip()
                
                    if not number.isdigit():
                        messagebox.showerror("Error", "Please!!! write your correct number.") 
                    elif not date:
                        messagebox.showerror("Error", "Please!!! write your information.")
                    elif not code.isdigit():
                        messagebox.showerror("Error", "Please enter a valid code") 
                    elif not adress:
                        messagebox.showerror("Error", "Please!!! write your information.")                        
                    elif number and date and code and adress:
                        win_book1.destroy()
                        from thankYou_page import Thank
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter your card : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=30)
                
                num_bk1= customtkinter.CTkEntry(frame3_bk1, width=210, height=35, placeholder_text='Enter card number')
                num_bk1.place(x=255, y=25)
                
                date_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='mm/yy')
                date_bk1.place(x=515, y=25)
                
                cod_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter security card')
                cod_bk1.place(x=255, y=75)
                
                adress_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter your adress')
                adress_bk1.place(x=515, y=75)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=visa_ferify)
                buy_bk1.place(x= 355, y=140)
            
            def paypal():
                def payp():
                    email = email_pay_bk1.get().strip()
                    if not email:
                        messagebox.showerror("Error", "Please!!! write your information.") 
                    elif '@' not in email:
                        messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                    else:
                        win_book1.destroy()
                        from thankYou_page import Thank
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter email from paypal : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=45)
                
                email_pay_bk1= customtkinter.CTkEntry(frame3_bk1, width=290, height=35, placeholder_text='Enter your email')
                email_pay_bk1.place(x=320, y=45)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=175, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=payp)
                buy_bk1.place(x= 315, y=115)
            
            def Cntinue():
                name = name_bk1.get().strip()
                prénom = prenom_bk1.get().strip()     
                phone = phone_bk1.get().strip()
                city = city_bk1.get().strip()
                email = email_bk1.get().strip()
                
                if not name:
                    messagebox.showerror("Error", "Please!!! write your information.") 
                elif not prénom:
                    messagebox.showerror("Error", "Please!!! write your information.")
                
                elif not phone.isdigit():
                    messagebox.showerror("Error", "Please enter a valid number") 
                elif not city:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif not email:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif '@' not in email:
                    messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                else:
                    head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Choose your payment : ",font=('Times New Roman',20,'bold'))
                    head_bk1.place(x=85, y=350)
                    
                    img_visa = ImageTk.PhotoImage(Image.open("images/visa.jfif"))
                    but_visa = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_visa,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_visa.place(x=380, y=370)
                    
                    img_masterCard = ImageTk.PhotoImage(Image.open("images/mastercard.jfif"))
                    but_masterCard = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_masterCard,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_masterCard.place(x=510, y=370)
                    
                    img_paypal = ImageTk.PhotoImage(Image.open("images/paypal.jfif"))
                    but_paypal = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_paypal,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=paypal)
                    but_paypal.place(x=640, y=370)
                
            win_book1 = Tk()

            img2=ImageTk.PhotoImage(Image.open("images/pattern.png"))
            l1=customtkinter.CTkLabel(win_book1,image=img2)
            l1.pack()
        
            frame=customtkinter.CTkFrame(master = win_book1, width=500, height=640, corner_radius=6)
            frame.place(x = 70,y=40)

            img_book1 = ImageTk.PhotoImage(Image.open("new_images/c5.jfif"))
            def insert_newlines(text, width=70):
                # Wrap text to fit the specified width
                return '\n'.join(textwrap.wrap(text, width))

            booksdesc = {}

            # Open the CSV file and read the descriptions
            with open('desc.csv', mode='r', newline='', encoding='utf-8') as file:
                reader = csv.reader(file, delimiter=';')
                next(reader)  # Skip the header
                for row in reader:
                    book, description = row
                    # Wrap the description text to fit the frame width
                    booksdesc[book] = insert_newlines(description, width=70)
            label1 = Label(frame,image = img_book1, width=310, height=290)
            label1.pack()
            label1.place(x=60, y=25)
            
            desc_bk1=customtkinter.CTkLabel(frame, text="Description : ",font=('Times New Roman',25,'bold'))
            desc_bk1.place(x=25, y=335)
            
            desc_bk1 = ctk.CTkLabel(frame, text=booksdesc.get('book13', 'No description available'), font=('Times New Roman', 15, 'bold'))
            desc_bk1.place(x=25, y=375)
            
            frame2_bk1=customtkinter.CTkFrame(master = win_book1, width=790, height=440, corner_radius=6)
            frame2_bk1.place(x = 630,y=40)

            head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Enter your information",font=('Times New Roman',35,'bold'))
            head_bk1.place(x=230, y=15)
            name_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your username ')
            name_bk1.place(x=95, y=95)
            prenom_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your lastname')
            prenom_bk1.place(x=420, y=95)
            phone_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your phone')
            phone_bk1.place(x=95, y=155)
            city_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your city')
            city_bk1.place(x=420, y=155)
            email_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your email')
            email_bk1.place(x=95, y=220)
            but_bk1 = customtkinter.CTkButton(frame2_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=Cntinue)
            but_bk1.place(x=305, y=290)
                    
            win_book1.state("zoomed")
            win_book1.mainloop()
            
#****************************************************** Book 14 **************************************************************
        def book_14():
            win1.destroy()
            def card():
                def visa_ferify():
                    number = num_bk1.get().strip()
                    date = date_bk1.get().strip()
                    code = cod_bk1.get().strip()
                    adress = adress_bk1.get().strip()
                
                    if not number.isdigit():
                        messagebox.showerror("Error", "Please!!! write your correct number.") 
                    elif not date:
                        messagebox.showerror("Error", "Please!!! write your information.")
                    elif not code.isdigit():
                        messagebox.showerror("Error", "Please enter a valid code") 
                    elif not adress:
                        messagebox.showerror("Error", "Please!!! write your information.")                        
                    elif number and date and code and adress:
                        win_book1.destroy()
                        from thankYou_page import Thank
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter your card : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=30)
                
                num_bk1= customtkinter.CTkEntry(frame3_bk1, width=210, height=35, placeholder_text='Enter card number')
                num_bk1.place(x=255, y=25)
                
                date_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='mm/yy')
                date_bk1.place(x=515, y=25)
                
                cod_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter security card')
                cod_bk1.place(x=255, y=75)
                
                adress_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter your adress')
                adress_bk1.place(x=515, y=75)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=visa_ferify)
                buy_bk1.place(x= 355, y=140)
            
            def paypal():
                def payp():
                    email = email_pay_bk1.get().strip()
                    if not email:
                        messagebox.showerror("Error", "Please!!! write your information.") 
                    elif '@' not in email:
                        messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                    else:
                        win_book1.destroy()
                        from thankYou_page import Thank
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter email from paypal : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=45)
                
                email_pay_bk1= customtkinter.CTkEntry(frame3_bk1, width=290, height=35, placeholder_text='Enter your email')
                email_pay_bk1.place(x=320, y=45)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=175, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=payp)
                buy_bk1.place(x= 315, y=115)
            
            def Cntinue():
                name = name_bk1.get().strip()
                prénom = prenom_bk1.get().strip()     
                phone = phone_bk1.get().strip()
                city = city_bk1.get().strip()
                email = email_bk1.get().strip()
                
                if not name:
                    messagebox.showerror("Error", "Please!!! write your information.") 
                elif not prénom:
                    messagebox.showerror("Error", "Please!!! write your information.")
                
                elif not phone.isdigit():
                    messagebox.showerror("Error", "Please enter a valid number") 
                elif not city:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif not email:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif '@' not in email:
                    messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                else:
                    head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Choose your payment : ",font=('Times New Roman',20,'bold'))
                    head_bk1.place(x=85, y=350)
                    
                    img_visa = ImageTk.PhotoImage(Image.open("images/visa.jfif"))
                    but_visa = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_visa,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_visa.place(x=380, y=370)
                    
                    img_masterCard = ImageTk.PhotoImage(Image.open("images/mastercard.jfif"))
                    but_masterCard = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_masterCard,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_masterCard.place(x=510, y=370)
                    
                    img_paypal = ImageTk.PhotoImage(Image.open("images/paypal.jfif"))
                    but_paypal = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_paypal,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=paypal)
                    but_paypal.place(x=640, y=370)
                
            win_book1 = Tk()

            img2=ImageTk.PhotoImage(Image.open("images/pattern.png"))
            l1=customtkinter.CTkLabel(win_book1,image=img2)
            l1.pack()
        
            frame=customtkinter.CTkFrame(master = win_book1, width=500, height=640, corner_radius=6)
            frame.place(x = 70,y=40)

            img_book1 = ImageTk.PhotoImage(Image.open("new_images/c6.jfif"))
            def insert_newlines(text, width=70):
                # Wrap text to fit the specified width
                return '\n'.join(textwrap.wrap(text, width))

            booksdesc = {}

            # Open the CSV file and read the descriptions
            with open('desc.csv', mode='r', newline='', encoding='utf-8') as file:
                reader = csv.reader(file, delimiter=';')
                next(reader)  # Skip the header
                for row in reader:
                    book, description = row
                    # Wrap the description text to fit the frame width
                    booksdesc[book] = insert_newlines(description, width=70)
            label1 = Label(frame,image = img_book1, width=310, height=290)
            label1.pack()
            label1.place(x=60, y=25)
            
            desc_bk1=customtkinter.CTkLabel(frame, text="Description : ",font=('Times New Roman',25,'bold'))
            desc_bk1.place(x=25, y=335)
            
            desc_bk1 = ctk.CTkLabel(frame, text=booksdesc.get('book14', 'No description available'), font=('Times New Roman', 15, 'bold'))
            desc_bk1.place(x=25, y=375)
            
            frame2_bk1=customtkinter.CTkFrame(master = win_book1, width=790, height=440, corner_radius=6)
            frame2_bk1.place(x = 630,y=40)

            head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Enter your information",font=('Times New Roman',35,'bold'))
            head_bk1.place(x=230, y=15)
            name_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your username ')
            name_bk1.place(x=95, y=95)
            prenom_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your lastname')
            prenom_bk1.place(x=420, y=95)
            phone_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your phone')
            phone_bk1.place(x=95, y=155)
            city_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your city')
            city_bk1.place(x=420, y=155)
            email_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your email')
            email_bk1.place(x=95, y=220)
            but_bk1 = customtkinter.CTkButton(frame2_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=Cntinue)
            but_bk1.place(x=305, y=290)
                    
            win_book1.state("zoomed")
            win_book1.mainloop()

#****************************************************** Book 15 **************************************************************
        def book_15():
            win1.destroy()
            def card():
                def visa_ferify():
                    number = num_bk1.get().strip()
                    date = date_bk1.get().strip()
                    code = cod_bk1.get().strip()
                    adress = adress_bk1.get().strip()
                
                    if not number.isdigit():
                        messagebox.showerror("Error", "Please!!! write your correct number.") 
                    elif not date:
                        messagebox.showerror("Error", "Please!!! write your information.")
                    elif not code.isdigit():
                        messagebox.showerror("Error", "Please enter a valid code") 
                    elif not adress:
                        messagebox.showerror("Error", "Please!!! write your information.")                        
                    elif number and date and code and adress:
                        win_book1.destroy()
                        from thankYou_page import Thank
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter your card : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=30)
                
                num_bk1= customtkinter.CTkEntry(frame3_bk1, width=210, height=35, placeholder_text='Enter card number')
                num_bk1.place(x=255, y=25)
                
                date_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='mm/yy')
                date_bk1.place(x=515, y=25)
                
                cod_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter security card')
                cod_bk1.place(x=255, y=75)
                
                adress_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter your adress')
                adress_bk1.place(x=515, y=75)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=visa_ferify)
                buy_bk1.place(x= 355, y=140)
            
            def paypal():
                def payp():
                    email = email_pay_bk1.get().strip()
                    if not email:
                        messagebox.showerror("Error", "Please!!! write your information.") 
                    elif '@' not in email:
                        messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                    else:
                        win_book1.destroy()
                        from thankYou_page import Thank
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter email from paypal : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=45)
                
                email_pay_bk1= customtkinter.CTkEntry(frame3_bk1, width=290, height=35, placeholder_text='Enter your email')
                email_pay_bk1.place(x=320, y=45)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=175, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=payp)
                buy_bk1.place(x= 315, y=115)
            
            def Cntinue():
                name = name_bk1.get().strip()
                prénom = prenom_bk1.get().strip()     
                phone = phone_bk1.get().strip()
                city = city_bk1.get().strip()
                email = email_bk1.get().strip()
                
                if not name:
                    messagebox.showerror("Error", "Please!!! write your information.") 
                elif not prénom:
                    messagebox.showerror("Error", "Please!!! write your information.")
                
                elif not phone.isdigit():
                    messagebox.showerror("Error", "Please enter a valid number") 
                elif not city:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif not email:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif '@' not in email:
                    messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                else:
                    head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Choose your payment : ",font=('Times New Roman',20,'bold'))
                    head_bk1.place(x=85, y=350)
                    
                    img_visa = ImageTk.PhotoImage(Image.open("images/visa.jfif"))
                    but_visa = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_visa,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_visa.place(x=380, y=370)
                    
                    img_masterCard = ImageTk.PhotoImage(Image.open("images/mastercard.jfif"))
                    but_masterCard = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_masterCard,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_masterCard.place(x=510, y=370)
                    
                    img_paypal = ImageTk.PhotoImage(Image.open("images/paypal.jfif"))
                    but_paypal = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_paypal,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=paypal)
                    but_paypal.place(x=640, y=370)
                
            win_book1 = Tk()

            img2=ImageTk.PhotoImage(Image.open("images/pattern.png"))
            l1=customtkinter.CTkLabel(win_book1,image=img2)
            l1.pack()
        
            frame=customtkinter.CTkFrame(master = win_book1, width=500, height=640, corner_radius=6)
            frame.place(x = 70,y=40)

            img_book1 = ImageTk.PhotoImage(Image.open("new_images/c7.jfif"))
            def insert_newlines(text, width=70):
                # Wrap text to fit the specified width
                return '\n'.join(textwrap.wrap(text, width))

            booksdesc = {}

            # Open the CSV file and read the descriptions
            with open('desc.csv', mode='r', newline='', encoding='utf-8') as file:
                reader = csv.reader(file, delimiter=';')
                next(reader)  # Skip the header
                for row in reader:
                    book, description = row
                    # Wrap the description text to fit the frame width
                    booksdesc[book] = insert_newlines(description, width=70)
            label1 = Label(frame,image = img_book1, width=310, height=290)
            label1.pack()
            label1.place(x=60, y=25)
            
            desc_bk1=customtkinter.CTkLabel(frame, text="Description : ",font=('Times New Roman',25,'bold'))
            desc_bk1.place(x=25, y=335)
            
            desc_bk1 = ctk.CTkLabel(frame, text=booksdesc.get('book15', 'No description available'), font=('Times New Roman', 15, 'bold'))
            desc_bk1.place(x=25, y=375)
            
            frame2_bk1=customtkinter.CTkFrame(master = win_book1, width=790, height=440, corner_radius=6)
            frame2_bk1.place(x = 630,y=40)

            head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Enter your information",font=('Times New Roman',35,'bold'))
            head_bk1.place(x=230, y=15)
            name_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your username ')
            name_bk1.place(x=95, y=95)
            prenom_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your lastname')
            prenom_bk1.place(x=420, y=95)
            phone_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your phone')
            phone_bk1.place(x=95, y=155)
            city_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your city')
            city_bk1.place(x=420, y=155)
            email_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your email')
            email_bk1.place(x=95, y=220)
            but_bk1 = customtkinter.CTkButton(frame2_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=Cntinue)
            but_bk1.place(x=305, y=290)
                    
            win_book1.state("zoomed")
            win_book1.mainloop()
            
#******************************************************* Book 16 **********************************************************
        def book_16():
            win1.destroy()
            def card():
                def visa_ferify():
                    number = num_bk1.get().strip()
                    date = date_bk1.get().strip()
                    code = cod_bk1.get().strip()
                    adress = adress_bk1.get().strip()
                
                    if not number.isdigit():
                        messagebox.showerror("Error", "Please!!! write your correct number.") 
                    elif not date:
                        messagebox.showerror("Error", "Please!!! write your information.")
                    elif not code.isdigit():
                        messagebox.showerror("Error", "Please enter a valid code") 
                    elif not adress:
                        messagebox.showerror("Error", "Please!!! write your information.")                        
                    elif number and date and code and adress:
                        win_book1.destroy()
                        from thankYou_page import Thank
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter your card : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=30)
                
                num_bk1= customtkinter.CTkEntry(frame3_bk1, width=210, height=35, placeholder_text='Enter card number')
                num_bk1.place(x=255, y=25)
                
                date_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='mm/yy')
                date_bk1.place(x=515, y=25)
                
                cod_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter security card')
                cod_bk1.place(x=255, y=75)
                
                adress_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter your adress')
                adress_bk1.place(x=515, y=75)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=visa_ferify)
                buy_bk1.place(x= 355, y=140)
            
            def paypal():
                def payp():
                    email = email_pay_bk1.get().strip()
                    if not email:
                        messagebox.showerror("Error", "Please!!! write your information.") 
                    elif '@' not in email:
                        messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                    else:
                        win_book1.destroy()
                        from thankYou_page import Thank
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter email from paypal : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=45)
                
                email_pay_bk1= customtkinter.CTkEntry(frame3_bk1, width=290, height=35, placeholder_text='Enter your email')
                email_pay_bk1.place(x=320, y=45)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=175, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=payp)
                buy_bk1.place(x= 315, y=115)
            
            def Cntinue():
                name = name_bk1.get().strip()
                prénom = prenom_bk1.get().strip()     
                phone = phone_bk1.get().strip()
                city = city_bk1.get().strip()
                email = email_bk1.get().strip()
                
                if not name:
                    messagebox.showerror("Error", "Please!!! write your information.") 
                elif not prénom:
                    messagebox.showerror("Error", "Please!!! write your information.")
                
                elif not phone.isdigit():
                    messagebox.showerror("Error", "Please enter a valid number") 
                elif not city:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif not email:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif '@' not in email:
                    messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                else:
                    head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Choose your payment : ",font=('Times New Roman',20,'bold'))
                    head_bk1.place(x=85, y=350)
                    
                    img_visa = ImageTk.PhotoImage(Image.open("images/visa.jfif"))
                    but_visa = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_visa,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_visa.place(x=380, y=370)
                    
                    img_masterCard = ImageTk.PhotoImage(Image.open("images/mastercard.jfif"))
                    but_masterCard = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_masterCard,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_masterCard.place(x=510, y=370)
                    
                    img_paypal = ImageTk.PhotoImage(Image.open("images/paypal.jfif"))
                    but_paypal = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_paypal,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=paypal)
                    but_paypal.place(x=640, y=370)
                
            win_book1 = Tk()

            img2=ImageTk.PhotoImage(Image.open("images/pattern.png"))
            l1=customtkinter.CTkLabel(win_book1,image=img2)
            l1.pack()
        
            frame=customtkinter.CTkFrame(master = win_book1, width=500, height=640, corner_radius=6)
            frame.place(x = 70,y=40)

            img_book1 = ImageTk.PhotoImage(Image.open("new_images/c8.jfif"))
            def insert_newlines(text, width=70):
                # Wrap text to fit the specified width
                return '\n'.join(textwrap.wrap(text, width))

            booksdesc = {}

            # Open the CSV file and read the descriptions
            with open('desc.csv', mode='r', newline='', encoding='utf-8') as file:
                reader = csv.reader(file, delimiter=';')
                next(reader)  # Skip the header
                for row in reader:
                    book, description = row
                    # Wrap the description text to fit the frame width
                    booksdesc[book] = insert_newlines(description, width=70)
            label1 = Label(frame,image = img_book1, width=310, height=290)
            label1.pack()
            label1.place(x=60, y=25)
            
            desc_bk1=customtkinter.CTkLabel(frame, text="Description : ",font=('Times New Roman',25,'bold'))
            desc_bk1.place(x=25, y=335)
            
            desc_bk1 = ctk.CTkLabel(frame, text=booksdesc.get('book16', 'No description available'), font=('Times New Roman', 15, 'bold'))
            desc_bk1.place(x=25, y=375)
            
            frame2_bk1=customtkinter.CTkFrame(master = win_book1, width=790, height=440, corner_radius=6)
            frame2_bk1.place(x = 630,y=40)

            head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Enter your information",font=('Times New Roman',35,'bold'))
            head_bk1.place(x=230, y=15)
            name_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your username ')
            name_bk1.place(x=95, y=95)
            prenom_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your lastname')
            prenom_bk1.place(x=420, y=95)
            phone_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your phone')
            phone_bk1.place(x=95, y=155)
            city_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your city')
            city_bk1.place(x=420, y=155)
            email_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your email')
            email_bk1.place(x=95, y=220)
            but_bk1 = customtkinter.CTkButton(frame2_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=Cntinue)
            but_bk1.place(x=305, y=290)
                    
            win_book1.state("zoomed")
            win_book1.mainloop()
            
#**************************************************** Book 17 **************************************************************
        def book_17():
            win1.destroy()
            def card():
                def visa_ferify():
                    number = num_bk1.get().strip()
                    date = date_bk1.get().strip()
                    code = cod_bk1.get().strip()
                    adress = adress_bk1.get().strip()
                
                    if not number.isdigit():
                        messagebox.showerror("Error", "Please!!! write your correct number.") 
                    elif not date:
                        messagebox.showerror("Error", "Please!!! write your information.")
                    elif not code.isdigit():
                        messagebox.showerror("Error", "Please enter a valid code") 
                    elif not adress:
                        messagebox.showerror("Error", "Please!!! write your information.")                        
                    elif number and date and code and adress:
                        win_book1.destroy()
                        from thankYou_page import Thank
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter your card : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=30)
                
                num_bk1= customtkinter.CTkEntry(frame3_bk1, width=210, height=35, placeholder_text='Enter card number')
                num_bk1.place(x=255, y=25)
                
                date_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='mm/yy')
                date_bk1.place(x=515, y=25)
                
                cod_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter security card')
                cod_bk1.place(x=255, y=75)
                
                adress_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter your adress')
                adress_bk1.place(x=515, y=75)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=visa_ferify)
                buy_bk1.place(x= 355, y=140)
            
            def paypal():
                def payp():
                    email = email_pay_bk1.get().strip()
                    if not email:
                        messagebox.showerror("Error", "Please!!! write your information.") 
                    elif '@' not in email:
                        messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                    else:
                        win_book1.destroy()
                        from thankYou_page import Thank
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter email from paypal : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=45)
                
                email_pay_bk1= customtkinter.CTkEntry(frame3_bk1, width=290, height=35, placeholder_text='Enter your email')
                email_pay_bk1.place(x=320, y=45)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=175, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=payp)
                buy_bk1.place(x= 315, y=115)
            
            def Cntinue():
                name = name_bk1.get().strip()
                prénom = prenom_bk1.get().strip()     
                phone = phone_bk1.get().strip()
                city = city_bk1.get().strip()
                email = email_bk1.get().strip()
                
                if not name:
                    messagebox.showerror("Error", "Please!!! write your information.") 
                elif not prénom:
                    messagebox.showerror("Error", "Please!!! write your information.")
                
                elif not phone.isdigit():
                    messagebox.showerror("Error", "Please enter a valid number") 
                elif not city:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif not email:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif '@' not in email:
                    messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                else:
                    head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Choose your payment : ",font=('Times New Roman',20,'bold'))
                    head_bk1.place(x=85, y=350)
                    
                    img_visa = ImageTk.PhotoImage(Image.open("images/visa.jfif"))
                    but_visa = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_visa,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_visa.place(x=380, y=370)
                    
                    img_masterCard = ImageTk.PhotoImage(Image.open("images/mastercard.jfif"))
                    but_masterCard = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_masterCard,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_masterCard.place(x=510, y=370)
                    
                    img_paypal = ImageTk.PhotoImage(Image.open("images/paypal.jfif"))
                    but_paypal = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_paypal,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=paypal)
                    but_paypal.place(x=640, y=370)
                
            win_book1 = Tk()

            img2=ImageTk.PhotoImage(Image.open("images/pattern.png"))
            l1=customtkinter.CTkLabel(win_book1,image=img2)
            l1.pack()
        
            frame=customtkinter.CTkFrame(master = win_book1, width=500, height=640, corner_radius=6)
            frame.place(x = 70,y=40)

            img_book1 = ImageTk.PhotoImage(Image.open("new_images/img_2.jpg"))
            def insert_newlines(text, width=70):
                # Wrap text to fit the specified width
                return '\n'.join(textwrap.wrap(text, width))

            booksdesc = {}

            # Open the CSV file and read the descriptions
            with open('desc.csv', mode='r', newline='', encoding='utf-8') as file:
                reader = csv.reader(file, delimiter=';')
                next(reader)  # Skip the header
                for row in reader:
                    book, description = row
                    # Wrap the description text to fit the frame width
                    booksdesc[book] = insert_newlines(description, width=70)
            label1 = Label(frame,image = img_book1, width=310, height=290)
            label1.pack()
            label1.place(x=60, y=25)
            
            desc_bk1=customtkinter.CTkLabel(frame, text="Description : ",font=('Times New Roman',25,'bold'))
            desc_bk1.place(x=25, y=335)
            
            desc_bk1 = ctk.CTkLabel(frame, text=booksdesc.get('book17', 'No description available'), font=('Times New Roman', 15, 'bold'))
            desc_bk1.place(x=25, y=375)
            
            frame2_bk1=customtkinter.CTkFrame(master = win_book1, width=790, height=440, corner_radius=6)
            frame2_bk1.place(x = 630,y=40)

            head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Enter your information",font=('Times New Roman',35,'bold'))
            head_bk1.place(x=230, y=15)
            name_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your username ')
            name_bk1.place(x=95, y=95)
            prenom_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your lastname')
            prenom_bk1.place(x=420, y=95)
            phone_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your phone')
            phone_bk1.place(x=95, y=155)
            city_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your city')
            city_bk1.place(x=420, y=155)
            email_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your email')
            email_bk1.place(x=95, y=220)
            but_bk1 = customtkinter.CTkButton(frame2_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=Cntinue)
            but_bk1.place(x=305, y=290)
                    
            win_book1.state("zoomed")
            win_book1.mainloop()
            
#***************************************************** Book 18 **************************************************************
        def book_18():
            win1.destroy()
            def card():
                def visa_ferify():
                    number = num_bk1.get().strip()
                    date = date_bk1.get().strip()
                    code = cod_bk1.get().strip()
                    adress = adress_bk1.get().strip()
                
                    if not number.isdigit():
                        messagebox.showerror("Error", "Please!!! write your correct number.") 
                    elif not date:
                        messagebox.showerror("Error", "Please!!! write your information.")
                    elif not code.isdigit():
                        messagebox.showerror("Error", "Please enter a valid code") 
                    elif not adress:
                        messagebox.showerror("Error", "Please!!! write your information.")                        
                    elif number and date and code and adress:
                        win_book1.destroy()
                        from thankYou_page import Thank
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter your card : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=30)
                
                num_bk1= customtkinter.CTkEntry(frame3_bk1, width=210, height=35, placeholder_text='Enter card number')
                num_bk1.place(x=255, y=25)
                
                date_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='mm/yy')
                date_bk1.place(x=515, y=25)
                
                cod_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter security card')
                cod_bk1.place(x=255, y=75)
                
                adress_bk1= customtkinter.CTkEntry(frame3_bk1, width=180, height=35, placeholder_text='Enter your adress')
                adress_bk1.place(x=515, y=75)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=visa_ferify)
                buy_bk1.place(x= 355, y=140)
            
            def paypal():
                def payp():
                    email = email_pay_bk1.get().strip()
                    if not email:
                        messagebox.showerror("Error", "Please!!! write your information.") 
                    elif '@' not in email:
                        messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                    else:
                        win_book1.destroy()
                        from thankYou_page import Thank
                        
                frame3_bk1=customtkinter.CTkFrame(win_book1, width=790, height=190, corner_radius=6)
                frame3_bk1.place(x = 630,y=490)
                
                head_bk1=customtkinter.CTkLabel(frame3_bk1, text="Enter email from paypal : ",font=('Times New Roman',20,'bold'))
                head_bk1.place(x=50, y=45)
                
                email_pay_bk1= customtkinter.CTkEntry(frame3_bk1, width=290, height=35, placeholder_text='Enter your email')
                email_pay_bk1.place(x=320, y=45)
                
                buy_bk1 = customtkinter.CTkButton(frame3_bk1, width=175, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=payp)
                buy_bk1.place(x= 315, y=115)
            
            def Cntinue():
                name = name_bk1.get().strip()
                prénom = prenom_bk1.get().strip()     
                phone = phone_bk1.get().strip()
                city = city_bk1.get().strip()
                email = email_bk1.get().strip()
                
                if not name:
                    messagebox.showerror("Error", "Please!!! write your information.") 
                elif not prénom:
                    messagebox.showerror("Error", "Please!!! write your information.")
                
                elif not phone.isdigit():
                    messagebox.showerror("Error", "Please enter a valid number") 
                elif not city:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif not email:
                    messagebox.showerror("Error", "Please!!! write your information.")
                elif '@' not in email:
                    messagebox.showerror("Error", "Invalid email format. Please include '@' in your email.")
                else:
                    head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Choose your payment : ",font=('Times New Roman',20,'bold'))
                    head_bk1.place(x=85, y=350)
                    
                    img_visa = ImageTk.PhotoImage(Image.open("images/visa.jfif"))
                    but_visa = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_visa,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_visa.place(x=380, y=370)
                    
                    img_masterCard = ImageTk.PhotoImage(Image.open("images/mastercard.jfif"))
                    but_masterCard = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_masterCard,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=card)
                    but_masterCard.place(x=510, y=370)
                    
                    img_paypal = ImageTk.PhotoImage(Image.open("images/paypal.jfif"))
                    but_paypal = customtkinter.CTkButton(frame2_bk1, width=85, height=15, image = img_paypal,text="", corner_radius=6, font=('Times New Roman',17,'bold'),fg_color="white", command=paypal)
                    but_paypal.place(x=640, y=370)
                
            win_book1 = Tk()

            img2=ImageTk.PhotoImage(Image.open("images/pattern.png"))
            l1=customtkinter.CTkLabel(win_book1,image=img2)
            l1.pack()
        
            frame=customtkinter.CTkFrame(master = win_book1, width=500, height=640, corner_radius=6)
            frame.place(x = 70,y=40)

            img_book1 = ImageTk.PhotoImage(Image.open("new_images/img_3.jpeg"))
            def insert_newlines(text, width=70):
                # Wrap text to fit the specified width
                return '\n'.join(textwrap.wrap(text, width))

            booksdesc = {}

            # Open the CSV file and read the descriptions
            with open('desc.csv', mode='r', newline='', encoding='utf-8') as file:
                reader = csv.reader(file, delimiter=';')
                next(reader)  # Skip the header
                for row in reader:
                    book, description = row
                    # Wrap the description text to fit the frame width
                    booksdesc[book] = insert_newlines(description, width=70)
            label1 = Label(frame,image = img_book1, width=310, height=290)
            label1.pack()
            label1.place(x=60, y=25)
            
            desc_bk1=customtkinter.CTkLabel(frame, text="Description : ",font=('Times New Roman',25,'bold'))
            desc_bk1.place(x=25, y=335)
            
            desc_bk1 = ctk.CTkLabel(frame, text=booksdesc.get('book18', 'No description available'), font=('Times New Roman', 15, 'bold'))
            desc_bk1.place(x=25, y=375)
            
            frame2_bk1=customtkinter.CTkFrame(master = win_book1, width=790, height=440, corner_radius=6)
            frame2_bk1.place(x = 630,y=40)

            head_bk1=customtkinter.CTkLabel(frame2_bk1, text="Enter your information",font=('Times New Roman',35,'bold'))
            head_bk1.place(x=230, y=15)
            name_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your username ')
            name_bk1.place(x=95, y=95)
            prenom_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your lastname')
            prenom_bk1.place(x=420, y=95)
            phone_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your phone')
            phone_bk1.place(x=95, y=155)
            city_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your city')
            city_bk1.place(x=420, y=155)
            email_bk1= customtkinter.CTkEntry(frame2_bk1, width=270, height=35, placeholder_text='Enter your email')
            email_bk1.place(x=95, y=220)
            but_bk1 = customtkinter.CTkButton(frame2_bk1, width=220, height=35, text="Continue", corner_radius=6, font=('Times New Roman',17,'bold'), command=Cntinue)
            but_bk1.place(x=305, y=290)
                    
            win_book1.state("zoomed")
            win_book1.mainloop()

#******************************************************* Fin **************************************************************
        # Function to read book prices from the CSV file and store them in a dictionary
        def get_all_book_prices(csv_filename):
            book_prices = {}
            with open(csv_filename, mode='r', newline='', encoding='utf-8') as file:
                reader = csv.DictReader(file)
                for row in reader:
                    book_prices[row['book_title']] = row['price']
            return book_prices

        # Example usage within your Tkinter code
        if __name__ == "__main__":

            all_book_prices = get_all_book_prices('book_pr.csv')
                    
                
        imgage=ImageTk.PhotoImage(Image.open("images/pattern.png"))
        lb=customtkinter.CTkLabel(win1,image=imgage)
        lb.pack()
        
        frame1=customtkinter.CTkFrame(lb, width=150, height=200, corner_radius=15)
        frame1.place(x= 20, y= 40)
        img_old = Image.open("img_book/adv1.jfif")
        width,height = img_old.size
        width_new =int(120)
        height_new =int(130)
        img_resize = img_old.resize((width_new,height_new))
        my_img = ImageTk.PhotoImage(img_resize)
        my0 = Label(frame1, image= my_img)
        my0.pack()
        my0.place(y=10, x=15)
        write0 = customtkinter.CTkLabel(frame1, text="Price : ", font=('Century Gothic',15, 'bold'))
        write0.place(x=33, y=144)
        book1_price = all_book_prices.get('book1', 'Price not found')
        writ0 = customtkinter.CTkLabel(frame1, text=f"{book1_price}$", font=('Century Gothic', 15, 'bold'))
        writ0.place(x=83, y=144)
        but0 = customtkinter.CTkButton(frame1, text="Rental",height=7, width=65,font=('Century Gothic',15, 'bold'), command=book_1)
        but0.place(x=41, y=171)
        
        frame2=customtkinter.CTkFrame(lb, width=150, height=200, corner_radius=15)
        frame2.place(x= 250, y= 40)
        img_old1 = Image.open("img_book/Adv2.jfif")
        width,height = img_old1.size
        width_new1 =int(120)
        height_new1 =int(130)
        img_resize1 = img_old1.resize((width_new1,height_new1))
        my_img1 = ImageTk.PhotoImage(img_resize1)
        my1 = Label(frame2, image= my_img1)
        my1.pack()
        my1.place(y=10, x=15)
        write1 = customtkinter.CTkLabel(frame2, text="Price : ", font=('Century Gothic',15, 'bold'))
        write1.place(x=33, y=144)
        book2_price = all_book_prices.get('book2', 'Price not found')
        write2 = customtkinter.CTkLabel(frame2, text=f"{book2_price}$", font=('Century Gothic', 15, 'bold'))
        write2.place(x=83, y=144)
        but1 = customtkinter.CTkButton(frame2, text="Rental",height=7, width=65,font=('Century Gothic',15, 'bold'), command=book_2)
        but1.place(x=41, y=171)
        
        frame3=customtkinter.CTkFrame(lb, width=150, height=200, corner_radius=15)
        frame3.place(x= 480, y= 40)
        img_old2 = Image.open("img_book/Adv3.jfif")
        width,height = img_old2.size
        width_new2 =int(120)
        height_new2 =int(130)
        img_resize2 = img_old2.resize((width_new2,height_new2))
        my_img2 = ImageTk.PhotoImage(img_resize2)
        my2 = Label(frame3, image= my_img2)
        my2.pack()
        my2.place(y=10, x=15)
        write2 = customtkinter.CTkLabel(frame3, text="Price : ", font=('Century Gothic',15, 'bold'))
        write2.place(x=33, y=144)
        book3_price = all_book_prices.get('book3', 'Price not found')
        write3 = customtkinter.CTkLabel(frame3, text=f"{book3_price}$", font=('Century Gothic', 15, 'bold'))
        write3.place(x=83, y=144)
        but2 = customtkinter.CTkButton(frame3, text="Rental",height=7, width=65,font=('Century Gothic',15, 'bold'), command= book_3)
        but2.place(x=41, y=171)
        
        frame4=customtkinter.CTkFrame(lb, width=150, height=200, corner_radius=15)
        frame4.place(x= 710, y= 40)
        img_old3 = Image.open("img_book/img_6.jpg")
        width,height = img_old3.size
        width_new3 =int(120)
        height_new3 =int(130)
        img_resize3 = img_old3.resize((width_new3,height_new3))
        my_img3 = ImageTk.PhotoImage(img_resize3)
        my3 = Label(frame4, image= my_img3)
        my3.pack()
        my3.place(y=10, x=15)
        write3 = customtkinter.CTkLabel(frame4, text="Price : ", font=('Century Gothic',15, 'bold'))
        write3.place(x=33, y=144)
        book4_price = all_book_prices.get('book4', 'Price not found')
        write4 = ctk.CTkLabel(frame4, text=f"{book4_price}$", font=('Century Gothic', 15, 'bold'))
        write4.place(x=83, y=144)
        but4 = customtkinter.CTkButton(frame4, text="Rental",height=7, width=65,font=('Century Gothic',15, 'bold'),command= book_4)
        but4.place(x=41, y=171)
        
        frame5=customtkinter.CTkFrame(lb, width=150, height=200, corner_radius=15)
        frame5.place(x= 940, y= 40)
        img_old4 = Image.open("img_book/Adv5.jfif")
        width,height = img_old4.size
        width_new4 =int(120)
        height_new4 =int(130)
        img_resize4 = img_old4.resize((width_new4,height_new4))
        my_img4 = ImageTk.PhotoImage(img_resize4)
        my4 = Label(frame5, image= my_img4)
        my4.pack()
        my4.place(y=10, x=15)
        write4 = customtkinter.CTkLabel(frame5, text="Price : ", font=('Century Gothic',15, 'bold'))
        write4.place(x=33, y=144)
        book5_price = all_book_prices.get('book5', 'Price not found')
        write5 = ctk.CTkLabel(frame5, text=f"{book5_price}$", font=('Century Gothic', 15, 'bold'))
        write5.place(x=83, y=144)
        but5 = customtkinter.CTkButton(frame5, text="Rental",height=7, width=65,font=('Century Gothic',15, 'bold'), command= book_5)
        but5.place(x=41, y=171)
        
        frame6=customtkinter.CTkFrame(lb, width=150, height=200, corner_radius=15)
        frame6.place(x= 1170, y= 40)
        img_old5 = Image.open("img_book/adv6.jfif")
        width,height = img_old5.size
        width_new5 =int(120)
        height_new5 =int(130)
        img_resize5 = img_old5.resize((width_new5,height_new5))
        my_img5 = ImageTk.PhotoImage(img_resize5)
        my5 = Label(frame6, image= my_img5)
        my5.pack()
        my5.place(y=10, x=15)
        write5 = customtkinter.CTkLabel(frame6, text="Price : ", font=('Century Gothic',15, 'bold'))
        write5.place(x=33, y=144)
        book6_price = all_book_prices.get('book6', 'Price not found')
        write6 = ctk.CTkLabel(frame6, text=f"{book6_price}$", font=('Century Gothic', 15, 'bold'))
        write6.place(x=83, y=144)
        but6 = customtkinter.CTkButton(frame6, text="Rental",height=7, width=65,font=('Century Gothic',15, 'bold'), command= book_6)
        but6.place(x=41, y=171)
        
        frame7=customtkinter.CTkFrame(lb, width=150, height=200, corner_radius=15)
        frame7.place(x= 20, y= 270)
        img_old7 = Image.open("img_book/adv7.jfif")
        width,height = img_old7.size
        width_new7 =int(120)
        height_new7 =int(130)
        img_resize7 = img_old7.resize((width_new7,height_new7))
        my_img7 = ImageTk.PhotoImage(img_resize7)
        my7 = Label(frame7, image= my_img7)
        my7.pack()
        my7.place(y=10, x=15)
        write7 = customtkinter.CTkLabel(frame7, text="Price : ", font=('Century Gothic',15, 'bold'))
        write7.place(x=33, y=144)
        book7_price = all_book_prices.get('book7', 'Price not found')
        write7 = ctk.CTkLabel(frame7, text=f"{book7_price}$", font=('Century Gothic', 15, 'bold'))
        write7.place(x=83, y=144)
        but7 = customtkinter.CTkButton(frame7, text="Rental",height=7, width=65,font=('Century Gothic',15, 'bold'), command= book_7)
        but7.place(x=41, y=171)
        
        frame8=customtkinter.CTkFrame(lb, width=150, height=200, corner_radius=15)
        frame8.place(x= 250, y= 270)
        img_old8 = Image.open("img_book/adv8.jfif")
        width,height = img_old8.size
        width_new8 =int(120)
        height_new8 =int(130)
        img_resize8 = img_old8.resize((width_new8,height_new8))
        my_img8 = ImageTk.PhotoImage(img_resize8)
        my8 = Label(frame8, image= my_img8)
        my8.pack()
        my8.place(y=10, x=15)
        write8 = customtkinter.CTkLabel(frame8, text="Price : ", font=('Century Gothic',15, 'bold'))
        write8.place(x=33, y=144)
        book8_price = all_book_prices.get('book8', 'Price not found')
        write8 = ctk.CTkLabel(frame8, text=f"{book8_price}$", font=('Century Gothic', 15, 'bold'))
        write8.place(x=83, y=144)
        but8 = customtkinter.CTkButton(frame8, text="Rental",height=7, width=65,font=('Century Gothic',15, 'bold'), command= book_8)
        but8.place(x=41, y=171)
        
        frame9=customtkinter.CTkFrame(lb, width=150, height=200, corner_radius=15)
        frame9.place(x= 480, y= 270)
        img_old9 = Image.open("img_book/c1.jfif")
        width,height = img_old9.size
        width_new9 =int(120)
        height_new9 =int(130)
        img_resize9 = img_old9.resize((width_new9,height_new9))
        my_img9 = ImageTk.PhotoImage(img_resize9)
        my9 = Label(frame9, image= my_img9)
        my9.pack()
        my9.place(y=10, x=15)
        write9 = customtkinter.CTkLabel(frame9, text="Price : ", font=('Century Gothic',15, 'bold'))
        write9.place(x=33, y=144)
        book9_price = all_book_prices.get('book9', 'Price not found')
        write9 = ctk.CTkLabel(frame9, text=f"{book9_price}$", font=('Century Gothic', 15, 'bold'))
        write9.place(x=83, y=144)
        but9 = customtkinter.CTkButton(frame9, text="Rental",height=7, width=65,font=('Century Gothic',15, 'bold'), command= book_9)
        but9.place(x=41, y=171)
        
        frame10=customtkinter.CTkFrame(lb, width=150, height=200, corner_radius=15)
        frame10.place(x= 710, y= 270)
        img_old10 = Image.open("img_book/c2.jfif")
        width,height = img_old10.size
        width_new10 =int(120)
        height_new10 =int(130)
        img_resize10 = img_old10.resize((width_new10,height_new10))
        my_img10 = ImageTk.PhotoImage(img_resize10)
        my10 = Label(frame10, image= my_img10)
        my10.pack()
        my10.place(y=10, x=15)
        write10 = customtkinter.CTkLabel(frame10, text="Price : ", font=('Century Gothic',15, 'bold'))
        write10.place(x=33, y=144)
        book10_price = all_book_prices.get('book10', 'Price not found')
        write10 = ctk.CTkLabel(frame10, text=f"{book10_price}$", font=('Century Gothic', 15, 'bold'))
        write10.place(x=83, y=144)
        but10 = customtkinter.CTkButton(frame10, text="Rental",height=7, width=65,font=('Century Gothic',15, 'bold'), command= book_10)
        but10.place(x=41, y=171)
        
        frame11=customtkinter.CTkFrame(lb, width=150, height=200, corner_radius=15)
        frame11.place(x= 940, y= 270)
        img_old11 = Image.open("img_book/c3.jfif")
        width,height = img_old11.size
        width_new11 =int(120)
        height_new11 =int(130)
        img_resize11 = img_old11.resize((width_new11,height_new11))
        my_img11 = ImageTk.PhotoImage(img_resize11)
        my11 = Label(frame11, image= my_img11)
        my11.pack()
        my11.place(y=10, x=15)
        write11 = customtkinter.CTkLabel(frame11, text="Price : ", font=('Century Gothic',15, 'bold'))
        write11.place(x=33, y=144)
        book11_price = all_book_prices.get('book11', 'Price not found')
        write11 = ctk.CTkLabel(frame11, text=f"{book11_price}$", font=('Century Gothic', 15, 'bold'))
        write11.place(x=83, y=144)
        but11 = customtkinter.CTkButton(frame11, text="Rental",height=7, width=65,font=('Century Gothic',15, 'bold'), command= book_11)
        but11.place(x=41, y=171)
    
        frame12=customtkinter.CTkFrame(lb, width=150, height=200, corner_radius=15)
        frame12.place(x= 1170, y= 270)
        img_old12 = Image.open("img_book/c4.jfif")
        width,height = img_old12.size
        width_new12 =int(120)
        height_new12 =int(130)
        img_resize12 = img_old12.resize((width_new12,height_new12))
        my_img12 = ImageTk.PhotoImage(img_resize12)
        my12 = Label(frame12, image= my_img12)
        my12.pack()
        my12.place(y=10, x=15)
        write12 = customtkinter.CTkLabel(frame12, text="Price : ", font=('Century Gothic',15, 'bold'))
        write12.place(x=33, y=144)
        book12_price = all_book_prices.get('book12', 'Price not found')
        write12 = ctk.CTkLabel(frame12, text=f"{book12_price}$", font=('Century Gothic', 15, 'bold'))
        write12.place(x=83, y=144)
        but12 = customtkinter.CTkButton(frame12, text="Rental",height=7, width=65,font=('Century Gothic',15, 'bold'), command= book_12)
        but12.place(x=41, y=171)
        
        frame13=customtkinter.CTkFrame(lb, width=150, height=200, corner_radius=15)
        frame13.place(x= 20, y= 500)
        img_old13 = Image.open("img_book/c5.jfif")
        width,height = img_old13.size
        width_new13 =int(120)
        height_new13 =int(130)
        img_resize13 = img_old13.resize((width_new13,height_new13))
        my_img13 = ImageTk.PhotoImage(img_resize13)
        my13 = Label(frame13, image= my_img13)
        my13.pack()
        my13.place(y=10, x=15)
        write13 = customtkinter.CTkLabel(frame13, text="Price : ", font=('Century Gothic',15, 'bold'))
        write13.place(x=33, y=144)
        book13_price = all_book_prices.get('book13', 'Price not found')
        write13 = ctk.CTkLabel(frame13, text=f"{book13_price}$", font=('Century Gothic', 15, 'bold'))
        write13.place(x=83, y=144)
        but13 = customtkinter.CTkButton(frame13, text="Rental",height=7, width=65,font=('Century Gothic',15, 'bold'), command= book_13)
        but13.place(x=41, y=171)
        
        frame14=customtkinter.CTkFrame(lb, width=150, height=200, corner_radius=15)
        frame14.place(x= 250, y= 500)
        img_old14 = Image.open("img_book/c6.jfif")
        width,height = img_old14.size
        width_new14 =int(120)
        height_new14 =int(130)
        img_resize14 = img_old14.resize((width_new14,height_new14))
        my_img14 = ImageTk.PhotoImage(img_resize14)
        my14 = Label(frame14, image= my_img14)
        my14.pack()
        my14.place(y=10, x=15)
        write14 = customtkinter.CTkLabel(frame14, text="Price : ", font=('Century Gothic',15, 'bold'))
        write14.place(x=33, y=144)
        book14_price = all_book_prices.get('book14', 'Price not found')
        write14 = ctk.CTkLabel(frame14, text=f"{book14_price}$", font=('Century Gothic', 15, 'bold'))
        write14.place(x=83, y=144)
        but14 = customtkinter.CTkButton(frame14, text="Rental",height=7, width=65,font=('Century Gothic',15, 'bold'), command= book_14)
        but14.place(x=41, y=171)
        
        frame15=customtkinter.CTkFrame(lb, width=150, height=200, corner_radius=15)
        frame15.place(x= 480, y= 500)
        img_old15 = Image.open("img_book/c7.jfif")
        width,height = img_old15.size
        width_new15 =int(120)
        height_new15 =int(130)
        img_resize15 = img_old15.resize((width_new15,height_new15))
        my_img15 = ImageTk.PhotoImage(img_resize15)
        my15 = Label(frame15, image= my_img15)
        my15.pack()
        my15.place(y=10, x=15)
        write15 = customtkinter.CTkLabel(frame15, text="Price : ", font=('Century Gothic',15, 'bold'))
        write15.place(x=33, y=144)
        book15_price = all_book_prices.get('book15', 'Price not found')
        write15 = ctk.CTkLabel(frame15, text=f"{book15_price}$", font=('Century Gothic', 15, 'bold'))
        write15.place(x=83, y=144)
        but15 = customtkinter.CTkButton(frame15, text="Rental",height=7, width=65,font=('Century Gothic',15, 'bold'), command= book_15)
        but15.place(x=41, y=171)
        
        frame16=customtkinter.CTkFrame(lb, width=150, height=200, corner_radius=15)
        frame16.place(x= 710, y= 500)
        img_old16 = Image.open("img_book/c8.jfif")
        width,height = img_old16.size
        width_new16 =int(120)
        height_new16 =int(130)
        img_resize16 = img_old16.resize((width_new16,height_new16))
        my_img16 = ImageTk.PhotoImage(img_resize16)
        my16 = Label(frame16, image= my_img16)
        my16.pack()
        my16.place(y=10, x=15)
        write16 = customtkinter.CTkLabel(frame16, text="Price : ", font=('Century Gothic',15, 'bold'))
        write16.place(x=33, y=144)
        book16_price = all_book_prices.get('book16', 'Price not found')
        write16 = ctk.CTkLabel(frame16, text=f"{book16_price}$", font=('Century Gothic', 15, 'bold'))
        write16.place(x=83, y=144)
        but16 = customtkinter.CTkButton(frame16, text="Rental",height=7, width=65,font=('Century Gothic',15, 'bold'), command= book_16)
        but16.place(x=41, y=171)
        
        frame17=customtkinter.CTkFrame(lb, width=150, height=200, corner_radius=15)
        frame17.place(x= 940, y= 500)
        img_old17 = Image.open("img_book/img_2.jpg")
        width,height = img_old17.size
        width_new17 =int(120)
        height_new17 =int(130)
        img_resize17 = img_old17.resize((width_new17,height_new17))
        my_img17 = ImageTk.PhotoImage(img_resize17)
        my17 = Label(frame17, image= my_img17)
        my17.pack()
        my17.place(y=10, x=15)
        write17 = customtkinter.CTkLabel(frame17, text="Price : ", font=('Century Gothic',15, 'bold'))
        write17.place(x=33, y=144)
        book17_price = all_book_prices.get('book17', 'Price not found')
        write17 = ctk.CTkLabel(frame17, text=f"{book17_price}$", font=('Century Gothic', 15, 'bold'))
        write17.place(x=83, y=144)
        but17 = customtkinter.CTkButton(frame17, text="Rental",height=7, width=65,font=('Century Gothic',15, 'bold'), command= book_17)
        but17.place(x=41, y=171)
        
        frame18=customtkinter.CTkFrame(lb, width=150, height=200, corner_radius=15)
        frame18.place(x= 1170, y= 500)
        img_old18 = Image.open("img_book/img_3.jpeg")
        width,height = img_old18.size
        width_new18 =int(120)
        height_new18 =int(130)
        img_resize18 = img_old18.resize((width_new18,height_new18))
        my_img18 = ImageTk.PhotoImage(img_resize18)
        my18 = Label(frame18, image= my_img18)
        my18.pack()
        my18.place(y=10, x=15)
        write18 = customtkinter.CTkLabel(frame18, text="Price : ", font=('Century Gothic',15, 'bold'))
        write18.place(x=33, y=144)
        book18_price = all_book_prices.get('book18', 'Price not found')
        write18 = ctk.CTkLabel(frame18, text=f"{book18_price}$", font=('Century Gothic', 15, 'bold'))
        write18.place(x=83, y=144)
        but18 = customtkinter.CTkButton(frame18, text="Rental",height=7, width=65,font=('Century Gothic',15, 'bold'), command= book_18)
        but18.place(x=41, y=171)
        
        def newbook():
            win1.destroy()
            import new_book



            
        
        button = customtkinter.CTkButton(win1, text="New Books" ,fg_color="red",height=13, width=80,font=('Century Gothic',20, 'bold'),command=newbook)
        button.place(x=700, y=750)
 
  
        
        win1.state("zoomed")
        win1.mainloop()
        

book1 = page_books()
book1.Books()
